node uav
{
  extern unsigned char nondet_uc();
  extern double nondet_dbl();

  //-- controller position
  local double pos_x = 0, pos_y = 0;
  
  void GRID_SETPOINT(unsigned char _x, unsigned char _y, unsigned char _z)
  {
    bool xmove = 0, ymove = 0;

    xmove = (_x == spcur_x + 1 || _x == spcur_x - 1) && _y == spcur_y;
    ymove = (_y == spcur_y + 1 || _y == spcur_y - 1) && _x == spcur_x;
    
    if(ca_state == CA_HOVER) {
      pos_x = nondet_dbl();
      pos_y = nondet_dbl();

      ASSUME(spcur_x == spnxt_x && spcur_y == spnxt_y);
      ASSUME(pos_x >= 5*spcur_x + 2 && pos_x <= 5*spcur_x + 3);
      ASSUME(pos_y >= 5*spcur_y + 2 && pos_y <= 5*spcur_y + 3);

      if(!((xmove && !ymove) || (!xmove && ymove))) { ca_error = 1; return; }

      spnxt_x = _x; spnxt_y = _y;

      xmove = ((pos_x >= 5*spnxt_x - 3 && pos_x <= 5*spnxt_x + 3 && spcur_x == spnxt_x - 1) ||
               (pos_x >= 5*spnxt_x + 2 && pos_x <= 5*spnxt_x + 8 && spcur_x == spnxt_x + 1)) &&
        (pos_y >= 5*spcur_y + 2 && pos_y <= 5*spcur_y + 3 && spcur_y == spnxt_y);
      ymove = ((pos_y >= 5*spnxt_y - 3 && pos_y <= 5*spnxt_y + 3 && spcur_y == spnxt_y - 1) ||
               (pos_y >= 5*spnxt_y + 2 && pos_y <= 5*spnxt_y + 8 && spcur_y == spnxt_y + 1)) &&
        (pos_x >= 5*spcur_x + 2 && pos_x <= 5*spcur_x + 3 && spcur_x == spnxt_x);

      if(!((xmove && !ymove) || (!xmove && ymove))) { ca_error = 1; return; }
      
      ca_state = CA_WAIT;
      return;
    }

    ca_error = 1;
  }

  int GRID_ARRIVED()
  {
    bool xmove = 0, ymove = 0;
    bool xarrived = 0, yarrived = 0;

    if(ca_state == CA_WAIT) {
      pos_x = nondet_dbl();
      pos_y = nondet_dbl();

      xmove = ((pos_x >= 5*spnxt_x - 3 && pos_x <= 5*spnxt_x + 3 && spcur_x == spnxt_x - 1) ||
               (pos_x >= 5*spnxt_x + 2 && pos_x <= 5*spnxt_x + 8 && spcur_x == spnxt_x + 1)) &&
        (pos_y >= 5*spcur_y + 2 && pos_y <= 5*spcur_y + 3 && spcur_y == spnxt_y);
      ymove = ((pos_y >= 5*spnxt_y - 3 && pos_y <= 5*spnxt_y + 3 && spcur_y == spnxt_y - 1) ||
               (pos_y >= 5*spnxt_y + 2 && pos_y <= 5*spnxt_y + 8 && spcur_y == spnxt_y + 1)) &&
        (pos_x >= 5*spcur_x + 2 && pos_x <= 5*spcur_x + 3 && spcur_x == spnxt_x);
      
      ASSUME((xmove && !ymove) || (!xmove && ymove));

      xarrived = (pos_x >= 5*spnxt_x + 2 && pos_x <= 5*spnxt_x + 3 && spcur_y == spnxt_y);
      yarrived = (pos_y >= 5*spnxt_y + 2 && pos_y <= 5*spnxt_y + 3 && spcur_x == spnxt_x);

      ASSUME(xarrived || yarrived);
      
      if(xarrived || yarrived) {
        spcur_x = spnxt_x; spcur_y = spnxt_y;

        if(!(spcur_x == spnxt_x && spcur_y == spnxt_y) ||
           !(pos_x >= 5*spcur_x + 2 && pos_x <= 5*spcur_x + 3) ||
           !(pos_y >= 5*spcur_y + 2 && pos_y <= 5*spcur_y + 3)) { ca_error = 1; return 0; }
        
        ca_state = CA_HOVER;
        return  1;
      } else {
        if(!((xmove && !ymove) || (!xmove && ymove))) { ca_error = 1; return 0; }
        return 0;
      }
    }

    ca_error = 1;
    return 0;
  }
}
