/*
 * generated by Xtext
 */
grammar InternalDmpl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package edu.cmu.sei.annex.dmpl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.cmu.sei.annex.dmpl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import edu.cmu.sei.annex.dmpl.services.DmplGrammarAccess;

}

@parser::members {
 
 	private DmplGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DmplGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDmplSubclause
entryRuleDmplSubclause 
:
{ before(grammarAccess.getDmplSubclauseRule()); }
	 ruleDmplSubclause
{ after(grammarAccess.getDmplSubclauseRule()); } 
	 EOF 
;

// Rule DmplSubclause
ruleDmplSubclause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDmplSubclauseAccess().getGroup()); }
(rule__DmplSubclause__Group__0)
{ after(grammarAccess.getDmplSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramElement
entryRuleProgramElement 
:
{ before(grammarAccess.getProgramElementRule()); }
	 ruleProgramElement
{ after(grammarAccess.getProgramElementRule()); } 
	 EOF 
;

// Rule ProgramElement
ruleProgramElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramElementAccess().getAlternatives()); }
(rule__ProgramElement__Alternatives)
{ after(grammarAccess.getProgramElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberConst
entryRuleNumberConst 
:
{ before(grammarAccess.getNumberConstRule()); }
	 ruleNumberConst
{ after(grammarAccess.getNumberConstRule()); } 
	 EOF 
;

// Rule NumberConst
ruleNumberConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberConstAccess().getAlternatives()); }
(rule__NumberConst__Alternatives)
{ after(grammarAccess.getNumberConstAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConst
entryRuleIntConst 
:
{ before(grammarAccess.getIntConstRule()); }
	 ruleIntConst
{ after(grammarAccess.getIntConstRule()); } 
	 EOF 
;

// Rule IntConst
ruleIntConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstAccess().getGroup()); }
(rule__IntConst__Group__0)
{ after(grammarAccess.getIntConstAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleConst
entryRuleDoubleConst 
:
{ before(grammarAccess.getDoubleConstRule()); }
	 ruleDoubleConst
{ after(grammarAccess.getDoubleConstRule()); } 
	 EOF 
;

// Rule DoubleConst
ruleDoubleConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleConstAccess().getGroup()); }
(rule__DoubleConst__Group__0)
{ after(grammarAccess.getDoubleConstAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarInit
entryRuleVarInit 
:
{ before(grammarAccess.getVarInitRule()); }
	 ruleVarInit
{ after(grammarAccess.getVarInitRule()); } 
	 EOF 
;

// Rule VarInit
ruleVarInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarInitAccess().getGroup()); }
(rule__VarInit__Group__0)
{ after(grammarAccess.getVarInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarAsgnList
entryRuleVarAsgnList 
:
{ before(grammarAccess.getVarAsgnListRule()); }
	 ruleVarAsgnList
{ after(grammarAccess.getVarAsgnListRule()); } 
	 EOF 
;

// Rule VarAsgnList
ruleVarAsgnList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAsgnListAccess().getAlternatives()); }
(rule__VarAsgnList__Alternatives)
{ after(grammarAccess.getVarAsgnListAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarAsgn
entryRuleVarAsgn 
:
{ before(grammarAccess.getVarAsgnRule()); }
	 ruleVarAsgn
{ after(grammarAccess.getVarAsgnRule()); } 
	 EOF 
;

// Rule VarAsgn
ruleVarAsgn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAsgnAccess().getGroup()); }
(rule__VarAsgn__Group__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar 
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccess().getGroup()); }
(rule__Var__Group__0)
{ after(grammarAccess.getVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDimension
entryRuleDimension 
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDimensionAccess().getAlternatives()); }
(rule__Dimension__Alternatives)
{ after(grammarAccess.getDimensionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getProcedureAssignment()); }
(rule__Procedure__ProcedureAssignment)
{ after(grammarAccess.getProcedureAccess().getProcedureAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcNoAttr
entryRuleProcNoAttr 
:
{ before(grammarAccess.getProcNoAttrRule()); }
	 ruleProcNoAttr
{ after(grammarAccess.getProcNoAttrRule()); } 
	 EOF 
;

// Rule ProcNoAttr
ruleProcNoAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcNoAttrAccess().getGroup()); }
(rule__ProcNoAttr__Group__0)
{ after(grammarAccess.getProcNoAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnBody
entryRuleFnBody 
:
{ before(grammarAccess.getFnBodyRule()); }
	 ruleFnBody
{ after(grammarAccess.getFnBodyRule()); } 
	 EOF 
;

// Rule FnBody
ruleFnBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFnBodyAccess().getGroup()); }
(rule__FnBody__Group__0)
{ after(grammarAccess.getFnBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnPrototype
entryRuleFnPrototype 
:
{ before(grammarAccess.getFnPrototypeRule()); }
	 ruleFnPrototype
{ after(grammarAccess.getFnPrototypeRule()); } 
	 EOF 
;

// Rule FnPrototype
ruleFnPrototype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFnPrototypeAccess().getAlternatives()); }
(rule__FnPrototype__Alternatives)
{ after(grammarAccess.getFnPrototypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarInitList
entryRuleVarInitList 
:
{ before(grammarAccess.getVarInitListRule()); }
	 ruleVarInitList
{ after(grammarAccess.getVarInitListRule()); } 
	 EOF 
;

// Rule VarInitList
ruleVarInitList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarInitListAccess().getGroup()); }
(rule__VarInitList__Group__0)
{ after(grammarAccess.getVarInitListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLVal
entryRuleLVal 
:
{ before(grammarAccess.getLValRule()); }
	 ruleLVal
{ after(grammarAccess.getLValRule()); } 
	 EOF 
;

// Rule LVal
ruleLVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLValAccess().getGroup()); }
(rule__LVal__Group__0)
{ after(grammarAccess.getLValAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getXorExprParserRuleCall()); }
	ruleXorExpr
{ after(grammarAccess.getExprAccess().getXorExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXorExpr
entryRuleXorExpr 
:
{ before(grammarAccess.getXorExprRule()); }
	 ruleXorExpr
{ after(grammarAccess.getXorExprRule()); } 
	 EOF 
;

// Rule XorExpr
ruleXorExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorExprAccess().getGroup()); }
(rule__XorExpr__Group__0)
{ after(grammarAccess.getXorExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseAndExpr
entryRuleBitwiseAndExpr 
:
{ before(grammarAccess.getBitwiseAndExprRule()); }
	 ruleBitwiseAndExpr
{ after(grammarAccess.getBitwiseAndExprRule()); } 
	 EOF 
;

// Rule BitwiseAndExpr
ruleBitwiseAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup()); }
(rule__BitwiseAndExpr__Group__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr 
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
(rule__EqualityExpr__Group__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpr
entryRuleCompareExpr 
:
{ before(grammarAccess.getCompareExprRule()); }
	 ruleCompareExpr
{ after(grammarAccess.getCompareExprRule()); } 
	 EOF 
;

// Rule CompareExpr
ruleCompareExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExprAccess().getGroup()); }
(rule__CompareExpr__Group__0)
{ after(grammarAccess.getCompareExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftExpr
entryRuleShiftExpr 
:
{ before(grammarAccess.getShiftExprRule()); }
	 ruleShiftExpr
{ after(grammarAccess.getShiftExprRule()); } 
	 EOF 
;

// Rule ShiftExpr
ruleShiftExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftExprAccess().getGroup()); }
(rule__ShiftExpr__Group__0)
{ after(grammarAccess.getShiftExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr 
:
{ before(grammarAccess.getAdditiveExprRule()); }
	 ruleAdditiveExpr
{ after(grammarAccess.getAdditiveExprRule()); } 
	 EOF 
;

// Rule AdditiveExpr
ruleAdditiveExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup()); }
(rule__AdditiveExpr__Group__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr 
:
{ before(grammarAccess.getMultiplicativeExprRule()); }
	 ruleMultiplicativeExpr
{ after(grammarAccess.getMultiplicativeExprRule()); } 
	 EOF 
;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
(rule__MultiplicativeExpr__Group__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpr
entryRuleTerminalExpr 
:
{ before(grammarAccess.getTerminalExprRule()); }
	 ruleTerminalExpr
{ after(grammarAccess.getTerminalExprRule()); } 
	 EOF 
;

// Rule TerminalExpr
ruleTerminalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExprAccess().getAlternatives()); }
(rule__TerminalExpr__Alternatives)
{ after(grammarAccess.getTerminalExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallExpr
entryRuleCallExpr 
:
{ before(grammarAccess.getCallExprRule()); }
	 ruleCallExpr
{ after(grammarAccess.getCallExprRule()); } 
	 EOF 
;

// Rule CallExpr
ruleCallExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallExprAccess().getGroup()); }
(rule__CallExpr__Group__0)
{ after(grammarAccess.getCallExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgList
entryRuleArgList 
:
{ before(grammarAccess.getArgListRule()); }
	 ruleArgList
{ after(grammarAccess.getArgListRule()); } 
	 EOF 
;

// Rule ArgList
ruleArgList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgListAccess().getGroup()); }
(rule__ArgList__Group__0)
{ after(grammarAccess.getArgListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSign
entryRuleSign 
:
{ before(grammarAccess.getSignRule()); }
	 ruleSign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule Sign
ruleSign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignAccess().getAlternatives()); }
(rule__Sign__Alternatives)
{ after(grammarAccess.getSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpType
entryRuleSimpType 
:
{ before(grammarAccess.getSimpTypeRule()); }
	 ruleSimpType
{ after(grammarAccess.getSimpTypeRule()); } 
	 EOF 
;

// Rule SimpType
ruleSimpType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpTypeAccess().getAlternatives()); }
(rule__SimpType__Alternatives)
{ after(grammarAccess.getSimpTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigned
entryRuleSigned 
:
{ before(grammarAccess.getSignedRule()); }
	 ruleSigned
{ after(grammarAccess.getSignedRule()); } 
	 EOF 
;

// Rule Signed
ruleSigned
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedAccess().getAlternatives()); }
(rule__Signed__Alternatives)
{ after(grammarAccess.getSignedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFunction
entryRuleBuiltInFunction 
:
{ before(grammarAccess.getBuiltInFunctionRule()); }
	 ruleBuiltInFunction
{ after(grammarAccess.getBuiltInFunctionRule()); } 
	 EOF 
;

// Rule BuiltInFunction
ruleBuiltInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
(rule__BuiltInFunction__Alternatives)
{ after(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getAlternatives()); }
(rule__Double__Alternatives)
{ after(grammarAccess.getDoubleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}










// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ShiftOperator
ruleShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
(rule__ShiftOperator__Alternatives)
{ after(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AdditiveOperator
ruleAdditiveOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
(rule__AdditiveOperator__Alternatives)
{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultiplicativeOperator
ruleMultiplicativeOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
(rule__MultiplicativeOperator__Alternatives)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__ProgramElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramElementAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getProgramElementAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgramElementAccess().getProcedureParserRuleCall_1()); }
	ruleProcedure
{ after(grammarAccess.getProgramElementAccess().getProcedureParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstKeyword_0_0()); }

	'const' 

{ after(grammarAccess.getConstantAccess().getConstKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getCONSTKeyword_0_1()); }

	'CONST' 

{ after(grammarAccess.getConstantAccess().getCONSTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConst__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberConstAccess().getIntConstParserRuleCall_0()); }
	ruleIntConst
{ after(grammarAccess.getNumberConstAccess().getIntConstParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberConstAccess().getDoubleConstParserRuleCall_1()); }
	ruleDoubleConst
{ after(grammarAccess.getNumberConstAccess().getDoubleConstParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgnList__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnListAccess().getVarAssignment_0()); }
(rule__VarAsgnList__VarAssignment_0)
{ after(grammarAccess.getVarAsgnListAccess().getVarAssignment_0()); }
)

    |(
{ before(grammarAccess.getVarAsgnListAccess().getVarAsgnAssignment_1()); }
(rule__VarAsgnList__VarAsgnAssignment_1)
{ after(grammarAccess.getVarAsgnListAccess().getVarAsgnAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getFnBodyAssignment_2_0()); }
(rule__VarAsgn__FnBodyAssignment_2_0)
{ after(grammarAccess.getVarAsgnAccess().getFnBodyAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getVarAsgnAccess().getExprAssignment_2_1()); }
(rule__VarAsgn__ExprAssignment_2_1)
{ after(grammarAccess.getVarAsgnAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getGroup_0()); }
(rule__Dimension__Group_0__0)
{ after(grammarAccess.getDimensionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDimensionAccess().getGroup_1()); }
(rule__Dimension__Group_1__0)
{ after(grammarAccess.getDimensionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDimensionAccess().getGroup_2()); }
(rule__Dimension__Group_2__0)
{ after(grammarAccess.getDimensionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcNoAttr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcNoAttrAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getProcNoAttrAccess().getSemicolonKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getProcNoAttrAccess().getFnBodyAssignment_1_1()); }
(rule__ProcNoAttr__FnBodyAssignment_1_1)
{ after(grammarAccess.getProcNoAttrAccess().getFnBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_0()); }
(rule__FnPrototype__Group_0__0)
{ after(grammarAccess.getFnPrototypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1()); }
(rule__FnPrototype__Group_1__0)
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_0_1_0_0()); }

	'extern' 

{ after(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_0_1_0_1()); }

	'EXTERN' 

{ after(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAlternatives_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_0_2_0_0()); }

	'pure' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_0_2_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_0_2_0_1()); }

	'PURE' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_1_1_0_0()); }

	'extern' 

{ after(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_1_1_0_1()); }

	'EXTERN' 

{ after(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_1_2_0_0()); }

	'pure' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_1_2_0_1()); }

	'PURE' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLValParserRuleCall_0()); }
	ruleLVal
{ after(grammarAccess.getTerminalExprAccess().getLValParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_1()); }
(rule__TerminalExpr__Group_1__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_2()); }
(rule__TerminalExpr__Group_2__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_3()); }
(rule__TerminalExpr__Group_3__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_4()); }
(rule__TerminalExpr__Group_4__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_5()); }
(rule__TerminalExpr__Group_5__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_6()); }
(rule__TerminalExpr__Group_6__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getCallExprParserRuleCall_7()); }
	ruleCallExpr
{ after(grammarAccess.getTerminalExprAccess().getCallExprParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_8()); }
(rule__TerminalExpr__Group_8__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpTypeAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getSimpTypeAccess().getBoolKeyword_0()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().get_BoolKeyword_1()); }

	'_Bool' 

{ after(grammarAccess.getSimpTypeAccess().get_BoolKeyword_1()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getIntKeyword_2()); }

	'int' 

{ after(grammarAccess.getSimpTypeAccess().getIntKeyword_2()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getDoubleKeyword_3()); }

	'double' 

{ after(grammarAccess.getSimpTypeAccess().getDoubleKeyword_3()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getVoidKeyword_4()); }

	'void' 

{ after(grammarAccess.getSimpTypeAccess().getVoidKeyword_4()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getCharKeyword_5()); }

	'char' 

{ after(grammarAccess.getSimpTypeAccess().getCharKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signed__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedAccess().getSignedKeyword_0()); }

	'signed' 

{ after(grammarAccess.getSignedAccess().getSignedKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignedAccess().getUnsignedKeyword_1()); }

	'unsigned' 

{ after(grammarAccess.getSignedAccess().getUnsignedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_otherKeyword_0()); }

	'exists_other' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_otherKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_OTHERKeyword_1()); }

	'EXISTS_OTHER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_OTHERKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_higherKeyword_2()); }

	'exists_higher' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_higherKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_HIGHERKeyword_3()); }

	'EXISTS_HIGHER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_HIGHERKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_lowerKeyword_4()); }

	'exists_lower' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_lowerKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_LOWERKeyword_5()); }

	'EXISTS_LOWER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_LOWERKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getNANKeyword_0()); }

	'NAN' 

{ after(grammarAccess.getDoubleAccess().getNANKeyword_0()); }
)

    |(
{ before(grammarAccess.getDoubleAccess().getGroup_1()); }
(rule__Double__Group_1__0)
{ after(grammarAccess.getDoubleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_1()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGREATEREnumLiteralDeclaration_2()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGREATEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
(	'<<' 
)
{ after(grammarAccess.getShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
(	'>>' 
)
{ after(grammarAccess.getShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLYEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getMODULUSEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getMODULUSEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getLOGICAL_NOTEnumLiteralDeclaration_2()); }
(	'!' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getLOGICAL_NOTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration_3()); }
(	'~' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
(

)
{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramElementsAssignment_1()); }
(rule__Program__ProgramElementsAssignment_1)*
{ after(grammarAccess.getProgramAccess().getProgramElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DmplSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DmplSubclause__Group__0__Impl
	rule__DmplSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getDmplSubclauseAction_0()); }
(

)
{ after(grammarAccess.getDmplSubclauseAccess().getDmplSubclauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DmplSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DmplSubclause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getProgramAssignment_1()); }
(rule__DmplSubclause__ProgramAssignment_1)
{ after(grammarAccess.getDmplSubclauseAccess().getProgramAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getAlternatives_0()); }
(rule__Constant__Alternatives_0)
{ after(grammarAccess.getConstantAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_3()); }
(rule__Constant__ValueAssignment_3)
{ after(grammarAccess.getConstantAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IntConst__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConst__Group__0__Impl
	rule__IntConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getSignAssignment_0()); }
(rule__IntConst__SignAssignment_0)?
{ after(grammarAccess.getIntConstAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntConst__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getValueAssignment_1()); }
(rule__IntConst__ValueAssignment_1)
{ after(grammarAccess.getIntConstAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoubleConst__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConst__Group__0__Impl
	rule__DoubleConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getSignAssignment_0()); }
(rule__DoubleConst__SignAssignment_0)?
{ after(grammarAccess.getDoubleConstAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleConst__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getValueAssignment_1()); }
(rule__DoubleConst__ValueAssignment_1)
{ after(grammarAccess.getDoubleConstAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group__0__Impl
	rule__VarInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getTypeAssignment_0()); }
(rule__VarInit__TypeAssignment_0)
{ after(grammarAccess.getVarInitAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnListAssignment_1()); }
(rule__VarInit__VarAsgnListAssignment_1)
{ after(grammarAccess.getVarInitAccess().getVarAsgnListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarAsgn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group__0__Impl
	rule__VarAsgn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_0()); }
(rule__VarAsgn__VarAssignment_0)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group__1__Impl
	rule__VarAsgn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getAlternatives_2()); }
(rule__VarAsgn__Alternatives_2)
{ after(grammarAccess.getVarAsgnAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Var__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameAssignment_0()); }
(rule__Var__NameAssignment_0)
{ after(grammarAccess.getVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getGroup_1()); }
(rule__Var__Group_1__0)*
{ after(grammarAccess.getVarAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__0__Impl
	rule__Var__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__1__Impl
	rule__Var__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getDimensionsAssignment_1_1()); }
(rule__Var__DimensionsAssignment_1_1)
{ after(grammarAccess.getVarAccess().getDimensionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dimension__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_0__0__Impl
	rule__Dimension__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIntDimensionAction_0_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getIntDimensionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexAssignment_0_1()); }
(rule__Dimension__IndexAssignment_0_1)
{ after(grammarAccess.getDimensionAccess().getIndexAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dimension__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_1__0__Impl
	rule__Dimension__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getNodeNumDimensionAction_1_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getNodeNumDimensionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getNKeyword_1_1()); }

	'#N' 

{ after(grammarAccess.getDimensionAccess().getNKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dimension__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_2__0__Impl
	rule__Dimension__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIdDimensionAction_2_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getIdDimensionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexAssignment_2_1()); }
(rule__Dimension__IndexAssignment_2_1)
{ after(grammarAccess.getDimensionAccess().getIndexAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSignedAssignment_0()); }
(rule__Type__SignedAssignment_0)?
{ after(grammarAccess.getTypeAccess().getSignedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpTypeAssignment_1()); }
(rule__Type__SimpTypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getSimpTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcNoAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcNoAttr__Group__0__Impl
	rule__ProcNoAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcNoAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcNoAttrAccess().getPrototypeAssignment_0()); }
(rule__ProcNoAttr__PrototypeAssignment_0)
{ after(grammarAccess.getProcNoAttrAccess().getPrototypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcNoAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcNoAttr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcNoAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcNoAttrAccess().getAlternatives_1()); }
(rule__ProcNoAttr__Alternatives_1)
{ after(grammarAccess.getProcNoAttrAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__0__Impl
	rule__FnBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getFnBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__1__Impl
	rule__FnBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getVarInitListAssignment_1()); }
(rule__FnBody__VarInitListAssignment_1)
{ after(grammarAccess.getFnBodyAccess().getVarInitListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getFnBodyAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FnPrototype__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__0__Impl
	rule__FnPrototype__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getThreadDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getFnPrototypeAccess().getThreadDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__1__Impl
	rule__FnPrototype__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAssignment_0_1()); }
(rule__FnPrototype__ExternAssignment_0_1)?
{ after(grammarAccess.getFnPrototypeAccess().getExternAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__2__Impl
	rule__FnPrototype__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAssignment_0_2()); }
(rule__FnPrototype__PureAssignment_0_2)?
{ after(grammarAccess.getFnPrototypeAccess().getPureAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__3__Impl
	rule__FnPrototype__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getThreadKeyword_0_3()); }

	'thread' 

{ after(grammarAccess.getFnPrototypeAccess().getThreadKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameAssignment_0_4()); }
(rule__FnPrototype__NameAssignment_0_4)
{ after(grammarAccess.getFnPrototypeAccess().getNameAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FnPrototype__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__0__Impl
	rule__FnPrototype__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getFnPrototypeDeclarationAction_1_0()); }
(

)
{ after(grammarAccess.getFnPrototypeAccess().getFnPrototypeDeclarationAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__1__Impl
	rule__FnPrototype__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAssignment_1_1()); }
(rule__FnPrototype__ExternAssignment_1_1)?
{ after(grammarAccess.getFnPrototypeAccess().getExternAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__2__Impl
	rule__FnPrototype__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAssignment_1_2()); }
(rule__FnPrototype__PureAssignment_1_2)?
{ after(grammarAccess.getFnPrototypeAccess().getPureAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__3__Impl
	rule__FnPrototype__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getTypeAssignment_1_3()); }
(rule__FnPrototype__TypeAssignment_1_3)
{ after(grammarAccess.getFnPrototypeAccess().getTypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__4__Impl
	rule__FnPrototype__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameAssignment_1_4()); }
(rule__FnPrototype__NameAssignment_1_4)
{ after(grammarAccess.getFnPrototypeAccess().getNameAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__5__Impl
	rule__FnPrototype__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getLeftParenthesisKeyword_1_5()); }

	'(' 

{ after(grammarAccess.getFnPrototypeAccess().getLeftParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__6__Impl
	rule__FnPrototype__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1_6()); }
(rule__FnPrototype__Group_1_6__0)?
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getRightParenthesisKeyword_1_7()); }

	')' 

{ after(grammarAccess.getFnPrototypeAccess().getRightParenthesisKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FnPrototype__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6__0__Impl
	rule__FnPrototype__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_0()); }
(rule__FnPrototype__ParamsAssignment_1_6_0)
{ after(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1_6_1()); }
(rule__FnPrototype__Group_1_6_1__0)*
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnPrototype__Group_1_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6_1__0__Impl
	rule__FnPrototype__Group_1_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getCommaKeyword_1_6_1_0()); }

	',' 

{ after(grammarAccess.getFnPrototypeAccess().getCommaKeyword_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_1_1()); }
(rule__FnPrototype__ParamsAssignment_1_6_1_1)
{ after(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeAssignment_0()); }
(rule__Param__TypeAssignment_0)
{ after(grammarAccess.getParamAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarAssignment_1()); }
(rule__Param__VarAssignment_1)
{ after(grammarAccess.getParamAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarInitList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitList__Group__0__Impl
	rule__VarInitList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitListAccess().getVarInitListAction_0()); }
(

)
{ after(grammarAccess.getVarInitListAccess().getVarInitListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInitList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitListAccess().getGroup_1()); }
(rule__VarInitList__Group_1__0)*
{ after(grammarAccess.getVarInitListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarInitList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitList__Group_1__0__Impl
	rule__VarInitList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitListAccess().getVarInitsAssignment_1_0()); }
(rule__VarInitList__VarInitsAssignment_1_0)
{ after(grammarAccess.getVarInitListAccess().getVarInitsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInitList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInitList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitListAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getVarInitListAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LVal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__0__Impl
	rule__LVal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getNameAssignment_0()); }
(rule__LVal__NameAssignment_0)
{ after(grammarAccess.getLValAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__1__Impl
	rule__LVal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getGroup_1()); }
(rule__LVal__Group_1__0)*
{ after(grammarAccess.getLValAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getGroup_2()); }
(rule__LVal__Group_2__0)?
{ after(grammarAccess.getLValAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LVal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__0__Impl
	rule__LVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getLValAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__1__Impl
	rule__LVal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getIndicesAssignment_1_1()); }
(rule__LVal__IndicesAssignment_1_1)
{ after(grammarAccess.getLValAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getLValAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LVal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_2__0__Impl
	rule__LVal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getCommercialAtKeyword_2_0()); }

	'@' 

{ after(grammarAccess.getLValAccess().getCommercialAtKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getAtAssignment_2_1()); }
(rule__LVal__AtAssignment_2_1)
{ after(grammarAccess.getLValAccess().getAtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__0__Impl
	rule__XorExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getBitwiseAndExprParserRuleCall_0()); }
	ruleBitwiseAndExpr
{ after(grammarAccess.getXorExprAccess().getBitwiseAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1()); }
(rule__XorExpr__Group_1__0)*
{ after(grammarAccess.getXorExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1__0__Impl
	rule__XorExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1_0()); }
(rule__XorExpr__Group_1_0__0)
{ after(grammarAccess.getXorExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightAssignment_1_1()); }
(rule__XorExpr__RightAssignment_1_1)
{ after(grammarAccess.getXorExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1_0_0()); }
(rule__XorExpr__Group_1_0_0__0)
{ after(grammarAccess.getXorExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XorExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0_0__0__Impl
	rule__XorExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getXorExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXorExprAccess().getXorExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1_0_0_1()); }

	'^' 

{ after(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group__0__Impl
	rule__BitwiseAndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getEqualityExprParserRuleCall_0()); }
	ruleEqualityExpr
{ after(grammarAccess.getBitwiseAndExprAccess().getEqualityExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1()); }
(rule__BitwiseAndExpr__Group_1__0)*
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1__0__Impl
	rule__BitwiseAndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0()); }
(rule__BitwiseAndExpr__Group_1_0__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getRightAssignment_1_1()); }
(rule__BitwiseAndExpr__RightAssignment_1_1)
{ after(grammarAccess.getBitwiseAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0_0()); }
(rule__BitwiseAndExpr__Group_1_0_0__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BitwiseAndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0_0__0__Impl
	rule__BitwiseAndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getBitwiseAndExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getBitwiseAndExprAccess().getBitwiseAndExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getAmpersandKeyword_1_0_0_1()); }

	'&' 

{ after(grammarAccess.getBitwiseAndExprAccess().getAmpersandKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getCompareExprParserRuleCall_0()); }
	ruleCompareExpr
{ after(grammarAccess.getEqualityExprAccess().getCompareExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
(rule__EqualityExpr__Group_1__0)*
{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1_0()); }
(rule__EqualityExpr__Group_1_0__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_1()); }
(rule__EqualityExpr__RightAssignment_1_1)
{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1_0_0()); }
(rule__EqualityExpr__Group_1_0_0__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualityExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0_0__0__Impl
	rule__EqualityExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__EqualityExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getEqualityExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group__0__Impl
	rule__CompareExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getShiftExprParserRuleCall_0()); }
	ruleShiftExpr
{ after(grammarAccess.getCompareExprAccess().getShiftExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1()); }
(rule__CompareExpr__Group_1__0)*
{ after(grammarAccess.getCompareExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1__0__Impl
	rule__CompareExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1_0()); }
(rule__CompareExpr__Group_1_0__0)
{ after(grammarAccess.getCompareExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getRightAssignment_1_1()); }
(rule__CompareExpr__RightAssignment_1_1)
{ after(grammarAccess.getCompareExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1_0_0()); }
(rule__CompareExpr__Group_1_0_0__0)
{ after(grammarAccess.getCompareExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0_0__0__Impl
	rule__CompareExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getCompareExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareExprAccess().getCompareExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__CompareExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getCompareExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group__0__Impl
	rule__ShiftExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getAdditiveExprParserRuleCall_0()); }
	ruleAdditiveExpr
{ after(grammarAccess.getShiftExprAccess().getAdditiveExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1()); }
(rule__ShiftExpr__Group_1__0)*
{ after(grammarAccess.getShiftExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1__0__Impl
	rule__ShiftExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1_0()); }
(rule__ShiftExpr__Group_1_0__0)
{ after(grammarAccess.getShiftExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getRightAssignment_1_1()); }
(rule__ShiftExpr__RightAssignment_1_1)
{ after(grammarAccess.getShiftExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1_0_0()); }
(rule__ShiftExpr__Group_1_0_0__0)
{ after(grammarAccess.getShiftExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ShiftExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0_0__0__Impl
	rule__ShiftExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__ShiftExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getShiftExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__0__Impl
	rule__AdditiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
	ruleMultiplicativeExpr
{ after(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
(rule__AdditiveExpr__Group_1__0)*
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__0__Impl
	rule__AdditiveExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0()); }
(rule__AdditiveExpr__Group_1_0__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
(rule__AdditiveExpr__RightAssignment_1_1)
{ after(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
(rule__AdditiveExpr__Group_1_0_0__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditiveExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0_0__0__Impl
	rule__AdditiveExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__AdditiveExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getAdditiveExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__0__Impl
	rule__MultiplicativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getTerminalExprParserRuleCall_0()); }
	ruleTerminalExpr
{ after(grammarAccess.getMultiplicativeExprAccess().getTerminalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
(rule__MultiplicativeExpr__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__0__Impl
	rule__MultiplicativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0()); }
(rule__MultiplicativeExpr__Group_1_0__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
(rule__MultiplicativeExpr__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
(rule__MultiplicativeExpr__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplicativeExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0_0__0__Impl
	rule__MultiplicativeExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__MultiplicativeExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplicativeExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__0__Impl
	rule__TerminalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdExprAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIdExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdKeyword_1_1()); }

	'id' 

{ after(grammarAccess.getTerminalExprAccess().getIdKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__0__Impl
	rule__TerminalExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntExprAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIntExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueAssignment_2_1()); }
(rule__TerminalExpr__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExprAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__0__Impl
	rule__TerminalExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getDoubleExprAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getDoubleExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueAssignment_3_1()); }
(rule__TerminalExpr__ValueAssignment_3_1)
{ after(grammarAccess.getTerminalExprAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__0__Impl
	rule__TerminalExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getNodeNumExprAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getNodeNumExprAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getNKeyword_4_1()); }

	'#N' 

{ after(grammarAccess.getTerminalExprAccess().getNKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__0__Impl
	rule__TerminalExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getUnaryExprAction_5_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getUnaryExprAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__1__Impl
	rule__TerminalExpr__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperatorAssignment_5_1()); }
(rule__TerminalExpr__OperatorAssignment_5_1)
{ after(grammarAccess.getTerminalExprAccess().getOperatorAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperandAssignment_5_2()); }
(rule__TerminalExpr__OperandAssignment_5_2)
{ after(grammarAccess.getTerminalExprAccess().getOperandAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__0__Impl
	rule__TerminalExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getBuiltInExprAction_6_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getBuiltInExprAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__1__Impl
	rule__TerminalExpr__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFunctionAssignment_6_1()); }
(rule__TerminalExpr__FunctionAssignment_6_1)
{ after(grammarAccess.getTerminalExprAccess().getFunctionAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__2__Impl
	rule__TerminalExpr__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_6_2()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__3__Impl
	rule__TerminalExpr__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFirstArgAssignment_6_3()); }
(rule__TerminalExpr__FirstArgAssignment_6_3)
{ after(grammarAccess.getTerminalExprAccess().getFirstArgAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__4__Impl
	rule__TerminalExpr__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getCommaKeyword_6_4()); }

	',' 

{ after(grammarAccess.getTerminalExprAccess().getCommaKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__5__Impl
	rule__TerminalExpr__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecondArgAssignment_6_5()); }
(rule__TerminalExpr__SecondArgAssignment_6_5)
{ after(grammarAccess.getTerminalExprAccess().getSecondArgAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_6_6()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TerminalExpr__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__0__Impl
	rule__TerminalExpr__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__1__Impl
	rule__TerminalExpr__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_8_1()); }
	ruleExpr
{ after(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__0__Impl
	rule__CallExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_0()); }
(rule__CallExpr__Group_0__0)?
{ after(grammarAccess.getCallExprAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__1__Impl
	rule__CallExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNameAssignment_1()); }
(rule__CallExpr__NameAssignment_1)
{ after(grammarAccess.getCallExprAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__2__Impl
	rule__CallExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCallExprAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__3__Impl
	rule__CallExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgListAssignment_3()); }
(rule__CallExpr__ArgListAssignment_3)
{ after(grammarAccess.getCallExprAccess().getArgListAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__4__Impl
	rule__CallExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCallExprAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_5()); }
(rule__CallExpr__Group_5__0)?
{ after(grammarAccess.getCallExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CallExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_0__0__Impl
	rule__CallExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNamespaceAssignment_0_0()); }
(rule__CallExpr__NamespaceAssignment_0_0)
{ after(grammarAccess.getCallExprAccess().getNamespaceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getCallExprAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_5__0__Impl
	rule__CallExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getCommercialAtKeyword_5_0()); }

	'@' 

{ after(grammarAccess.getCallExprAccess().getCommercialAtKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getAtAssignment_5_1()); }
(rule__CallExpr__AtAssignment_5_1)
{ after(grammarAccess.getCallExprAccess().getAtAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group__0__Impl
	rule__ArgList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgListAction_0()); }
(

)
{ after(grammarAccess.getArgListAccess().getArgListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getGroup_1()); }
(rule__ArgList__Group_1__0)?
{ after(grammarAccess.getArgListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1__0__Impl
	rule__ArgList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgsAssignment_1_0()); }
(rule__ArgList__ArgsAssignment_1_0)
{ after(grammarAccess.getArgListAccess().getArgsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getGroup_1_1()); }
(rule__ArgList__Group_1_1__0)*
{ after(grammarAccess.getArgListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1_1__0__Impl
	rule__ArgList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getArgListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgsAssignment_1_1_1()); }
(rule__ArgList__ArgsAssignment_1_1_1)
{ after(grammarAccess.getArgListAccess().getArgsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Double__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__0__Impl
	rule__Double__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__1__Impl
	rule__Double__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_2()); }
(	RULE_INT)?
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__ProgramElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramElementsProgramElementParserRuleCall_1_0()); }
	ruleProgramElement{ after(grammarAccess.getProgramAccess().getProgramElementsProgramElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__ProgramAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getProgramProgramParserRuleCall_1_0()); }
	ruleProgram{ after(grammarAccess.getDmplSubclauseAccess().getProgramProgramParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getConstantAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueNumberConstParserRuleCall_3_0()); }
	ruleNumberConst{ after(grammarAccess.getConstantAccess().getValueNumberConstParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getSignSignParserRuleCall_0_0()); }
	ruleSign{ after(grammarAccess.getIntConstAccess().getSignSignParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIntConstAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getSignSignParserRuleCall_0_0()); }
	ruleSign{ after(grammarAccess.getDoubleConstAccess().getSignSignParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getValueDoubleParserRuleCall_1_0()); }
	ruleDouble{ after(grammarAccess.getDoubleConstAccess().getValueDoubleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVarInitAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__VarAsgnListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnListVarAsgnListParserRuleCall_1_0()); }
	ruleVarAsgnList{ after(grammarAccess.getVarInitAccess().getVarAsgnListVarAsgnListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgnList__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnListAccess().getVarVarParserRuleCall_0_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnListAccess().getVarVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgnList__VarAsgnAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnListAccess().getVarAsgnVarAsgnParserRuleCall_1_0()); }
	ruleVarAsgn{ after(grammarAccess.getVarAsgnListAccess().getVarAsgnVarAsgnParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_0_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__FnBodyAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getFnBodyFnBodyParserRuleCall_2_0_0()); }
	ruleFnBody{ after(grammarAccess.getVarAsgnAccess().getFnBodyFnBodyParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getExprExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getVarAsgnAccess().getExprExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getVarAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__DimensionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getDimensionsDimensionParserRuleCall_1_1_0()); }
	ruleDimension{ after(grammarAccess.getVarAccess().getDimensionsDimensionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__IndexAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getDimensionAccess().getIndexINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__IndexAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexTIDENTIFIERTerminalRuleCall_2_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getDimensionAccess().getIndexTIDENTIFIERTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SignedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSignedSignedParserRuleCall_0_0()); }
	ruleSigned{ after(grammarAccess.getTypeAccess().getSignedSignedParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpTypeSimpTypeParserRuleCall_1_0()); }
	ruleSimpType{ after(grammarAccess.getTypeAccess().getSimpTypeSimpTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ProcedureAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getProcedureProcNoAttrParserRuleCall_0()); }
	ruleProcNoAttr{ after(grammarAccess.getProcedureAccess().getProcedureProcNoAttrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcNoAttr__PrototypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcNoAttrAccess().getPrototypeFnPrototypeParserRuleCall_0_0()); }
	ruleFnPrototype{ after(grammarAccess.getProcNoAttrAccess().getPrototypeFnPrototypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcNoAttr__FnBodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcNoAttrAccess().getFnBodyFnBodyParserRuleCall_1_1_0()); }
	ruleFnBody{ after(grammarAccess.getProcNoAttrAccess().getFnBodyFnBodyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__VarInitListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getVarInitListVarInitListParserRuleCall_1_0()); }
	ruleVarInitList{ after(grammarAccess.getFnBodyAccess().getVarInitListVarInitListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAlternatives_0_1_0()); }
(rule__FnPrototype__ExternAlternatives_0_1_0)
{ after(grammarAccess.getFnPrototypeAccess().getExternAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAlternatives_0_2_0()); }
(rule__FnPrototype__PureAlternatives_0_2_0)
{ after(grammarAccess.getFnPrototypeAccess().getPureAlternatives_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__NameAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_0_4_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAlternatives_1_1_0()); }
(rule__FnPrototype__ExternAlternatives_1_1_0)
{ after(grammarAccess.getFnPrototypeAccess().getExternAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAlternatives_1_2_0()); }
(rule__FnPrototype__PureAlternatives_1_2_0)
{ after(grammarAccess.getFnPrototypeAccess().getPureAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__TypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getTypeTypeParserRuleCall_1_3_0()); }
	ruleType{ after(grammarAccess.getFnPrototypeAccess().getTypeTypeParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__NameAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_1_4_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ParamsAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_0_0()); }
	ruleParam{ after(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ParamsAssignment_1_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_1_1_0()); }
	ruleParam{ after(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarVarParserRuleCall_1_0()); }
	ruleVar{ after(grammarAccess.getParamAccess().getVarVarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitList__VarInitsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitListAccess().getVarInitsVarInitParserRuleCall_1_0_0()); }
	ruleVarInit{ after(grammarAccess.getVarInitListAccess().getVarInitsVarInitParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getLValAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getIndicesExprParserRuleCall_1_1_0()); }
	ruleExpr{ after(grammarAccess.getLValAccess().getIndicesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__AtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getAtExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getLValAccess().getAtExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightBitwiseAndExprParserRuleCall_1_1_0()); }
	ruleBitwiseAndExpr{ after(grammarAccess.getXorExprAccess().getRightBitwiseAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getRightEqualityExprParserRuleCall_1_1_0()); }
	ruleEqualityExpr{ after(grammarAccess.getBitwiseAndExprAccess().getRightEqualityExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleEqualityOperator{ after(grammarAccess.getEqualityExprAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightCompareExprParserRuleCall_1_1_0()); }
	ruleCompareExpr{ after(grammarAccess.getEqualityExprAccess().getRightCompareExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getOperatorCompareOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareExprAccess().getOperatorCompareOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getRightShiftExprParserRuleCall_1_1_0()); }
	ruleShiftExpr{ after(grammarAccess.getCompareExprAccess().getRightShiftExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleShiftOperator{ after(grammarAccess.getShiftExprAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
	ruleAdditiveExpr{ after(grammarAccess.getShiftExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleAdditiveOperator{ after(grammarAccess.getAdditiveExprAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpr{ after(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleMultiplicativeOperator{ after(grammarAccess.getMultiplicativeExprAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightTerminalExprParserRuleCall_1_1_0()); }
	ruleTerminalExpr{ after(grammarAccess.getMultiplicativeExprAccess().getRightTerminalExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExprAccess().getValueINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueDoubleParserRuleCall_3_1_0()); }
	ruleDouble{ after(grammarAccess.getTerminalExprAccess().getValueDoubleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__OperatorAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperatorUnaryOperatorEnumRuleCall_5_1_0()); }
	ruleUnaryOperator{ after(grammarAccess.getTerminalExprAccess().getOperatorUnaryOperatorEnumRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__OperandAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperandExprParserRuleCall_5_2_0()); }
	ruleExpr{ after(grammarAccess.getTerminalExprAccess().getOperandExprParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__FunctionAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFunctionBuiltInFunctionParserRuleCall_6_1_0()); }
	ruleBuiltInFunction{ after(grammarAccess.getTerminalExprAccess().getFunctionBuiltInFunctionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__FirstArgAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFirstArgTIDENTIFIERTerminalRuleCall_6_3_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getTerminalExprAccess().getFirstArgTIDENTIFIERTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__SecondArgAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecondArgExprParserRuleCall_6_5_0()); }
	ruleExpr{ after(grammarAccess.getTerminalExprAccess().getSecondArgExprParserRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__NamespaceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNamespaceTIDENTIFIERTerminalRuleCall_0_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getCallExprAccess().getNamespaceTIDENTIFIERTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getCallExprAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__ArgListAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgListArgListParserRuleCall_3_0()); }
	ruleArgList{ after(grammarAccess.getCallExprAccess().getArgListArgListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__AtAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getAtExprParserRuleCall_5_1_0()); }
	ruleExpr{ after(grammarAccess.getCallExprAccess().getAtExprParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__ArgsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgsExprParserRuleCall_1_0_0()); }
	ruleExpr{ after(grammarAccess.getArgListAccess().getArgsExprParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgList__ArgsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgListAccess().getArgsExprParserRuleCall_1_1_1_0()); }
	ruleExpr{ after(grammarAccess.getArgListAccess().getArgsExprParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TIDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


