/*
 * generated by Xtext
 */
grammar InternalDmpl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package edu.cmu.sei.annex.dmpl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.cmu.sei.annex.dmpl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import edu.cmu.sei.annex.dmpl.services.DmplGrammarAccess;

}

@parser::members {
 
 	private DmplGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DmplGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDmplSubclause
entryRuleDmplSubclause 
:
{ before(grammarAccess.getDmplSubclauseRule()); }
	 ruleDmplSubclause
{ after(grammarAccess.getDmplSubclauseRule()); } 
	 EOF 
;

// Rule DmplSubclause
ruleDmplSubclause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDmplSubclauseAccess().getGroup()); }
(rule__DmplSubclause__Group__0)
{ after(grammarAccess.getDmplSubclauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProgramElement
entryRuleProgramElement 
:
{ before(grammarAccess.getProgramElementRule()); }
	 ruleProgramElement
{ after(grammarAccess.getProgramElementRule()); } 
	 EOF 
;

// Rule ProgramElement
ruleProgramElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramElementAccess().getAlternatives()); }
(rule__ProgramElement__Alternatives)
{ after(grammarAccess.getProgramElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberConst
entryRuleNumberConst 
:
{ before(grammarAccess.getNumberConstRule()); }
	 ruleNumberConst
{ after(grammarAccess.getNumberConstRule()); } 
	 EOF 
;

// Rule NumberConst
ruleNumberConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberConstAccess().getAlternatives()); }
(rule__NumberConst__Alternatives)
{ after(grammarAccess.getNumberConstAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntConst
entryRuleIntConst 
:
{ before(grammarAccess.getIntConstRule()); }
	 ruleIntConst
{ after(grammarAccess.getIntConstRule()); } 
	 EOF 
;

// Rule IntConst
ruleIntConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntConstAccess().getGroup()); }
(rule__IntConst__Group__0)
{ after(grammarAccess.getIntConstAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleConst
entryRuleDoubleConst 
:
{ before(grammarAccess.getDoubleConstRule()); }
	 ruleDoubleConst
{ after(grammarAccess.getDoubleConstRule()); } 
	 EOF 
;

// Rule DoubleConst
ruleDoubleConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleConstAccess().getGroup()); }
(rule__DoubleConst__Group__0)
{ after(grammarAccess.getDoubleConstAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNode
entryRuleNode 
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeAccess().getNodeAssignment()); }
(rule__Node__NodeAssignment)
{ after(grammarAccess.getNodeAccess().getNodeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeNoAttr
entryRuleNodeNoAttr 
:
{ before(grammarAccess.getNodeNoAttrRule()); }
	 ruleNodeNoAttr
{ after(grammarAccess.getNodeNoAttrRule()); } 
	 EOF 
;

// Rule NodeNoAttr
ruleNodeNoAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeNoAttrAccess().getGroup()); }
(rule__NodeNoAttr__Group__0)
{ after(grammarAccess.getNodeNoAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeBody
entryRuleNodeBody 
:
{ before(grammarAccess.getNodeBodyRule()); }
	 ruleNodeBody
{ after(grammarAccess.getNodeBodyRule()); } 
	 EOF 
;

// Rule NodeBody
ruleNodeBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeBodyAccess().getGroup()); }
(rule__NodeBody__Group__0)
{ after(grammarAccess.getNodeBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeBodyElement
entryRuleNodeBodyElement 
:
{ before(grammarAccess.getNodeBodyElementRule()); }
	 ruleNodeBodyElement
{ after(grammarAccess.getNodeBodyElementRule()); } 
	 EOF 
;

// Rule NodeBodyElement
ruleNodeBodyElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeBodyElementAccess().getAlternatives()); }
(rule__NodeBodyElement__Alternatives)
{ after(grammarAccess.getNodeBodyElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarBlock
entryRuleVarBlock 
:
{ before(grammarAccess.getVarBlockRule()); }
	 ruleVarBlock
{ after(grammarAccess.getVarBlockRule()); } 
	 EOF 
;

// Rule VarBlock
ruleVarBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarBlockAccess().getGroup()); }
(rule__VarBlock__Group__0)
{ after(grammarAccess.getVarBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordBlock
entryRuleRecordBlock 
:
{ before(grammarAccess.getRecordBlockRule()); }
	 ruleRecordBlock
{ after(grammarAccess.getRecordBlockRule()); } 
	 EOF 
;

// Rule RecordBlock
ruleRecordBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordBlockAccess().getRecordAssignment()); }
(rule__RecordBlock__RecordAssignment)
{ after(grammarAccess.getRecordBlockAccess().getRecordAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeVarInit
entryRuleNodeVarInit 
:
{ before(grammarAccess.getNodeVarInitRule()); }
	 ruleNodeVarInit
{ after(grammarAccess.getNodeVarInitRule()); } 
	 EOF 
;

// Rule NodeVarInit
ruleNodeVarInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeVarInitAccess().getGroup()); }
(rule__NodeVarInit__Group__0)
{ after(grammarAccess.getNodeVarInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecord
entryRuleRecord 
:
{ before(grammarAccess.getRecordRule()); }
	 ruleRecord
{ after(grammarAccess.getRecordRule()); } 
	 EOF 
;

// Rule Record
ruleRecord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordAccess().getGroup()); }
(rule__Record__Group__0)
{ after(grammarAccess.getRecordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarInit
entryRuleVarInit 
:
{ before(grammarAccess.getVarInitRule()); }
	 ruleVarInit
{ after(grammarAccess.getVarInitRule()); } 
	 EOF 
;

// Rule VarInit
ruleVarInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarInitAccess().getGroup()); }
(rule__VarInit__Group__0)
{ after(grammarAccess.getVarInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarAsgn
entryRuleVarAsgn 
:
{ before(grammarAccess.getVarAsgnRule()); }
	 ruleVarAsgn
{ after(grammarAccess.getVarAsgnRule()); } 
	 EOF 
;

// Rule VarAsgn
ruleVarAsgn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAsgnAccess().getAlternatives()); }
(rule__VarAsgn__Alternatives)
{ after(grammarAccess.getVarAsgnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar 
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccess().getGroup()); }
(rule__Var__Group__0)
{ after(grammarAccess.getVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDimension
entryRuleDimension 
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDimensionAccess().getAlternatives()); }
(rule__Dimension__Alternatives)
{ after(grammarAccess.getDimensionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnBody
entryRuleFnBody 
:
{ before(grammarAccess.getFnBodyRule()); }
	 ruleFnBody
{ after(grammarAccess.getFnBodyRule()); } 
	 EOF 
;

// Rule FnBody
ruleFnBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFnBodyAccess().getGroup()); }
(rule__FnBody__Group__0)
{ after(grammarAccess.getFnBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFnPrototype
entryRuleFnPrototype 
:
{ before(grammarAccess.getFnPrototypeRule()); }
	 ruleFnPrototype
{ after(grammarAccess.getFnPrototypeRule()); } 
	 EOF 
;

// Rule FnPrototype
ruleFnPrototype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFnPrototypeAccess().getAlternatives()); }
(rule__FnPrototype__Alternatives)
{ after(grammarAccess.getFnPrototypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrList
entryRuleAttrList 
:
{ before(grammarAccess.getAttrListRule()); }
	 ruleAttrList
{ after(grammarAccess.getAttrListRule()); } 
	 EOF 
;

// Rule AttrList
ruleAttrList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getAttrListAccess().getGroup()); }
(rule__AttrList__Group__0)
{ after(grammarAccess.getAttrListAccess().getGroup()); }
)
(
{ before(grammarAccess.getAttrListAccess().getGroup()); }
(rule__AttrList__Group__0)*
{ after(grammarAccess.getAttrListAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttr
entryRuleAttr 
:
{ before(grammarAccess.getAttrRule()); }
	 ruleAttr
{ after(grammarAccess.getAttrRule()); } 
	 EOF 
;

// Rule Attr
ruleAttr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrAccess().getGroup()); }
(rule__Attr__Group__0)
{ after(grammarAccess.getAttrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmt
entryRuleStmt 
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtAccess().getAlternatives()); }
(rule__Stmt__Alternatives)
{ after(grammarAccess.getStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentStmt
entryRuleAssignmentStmt 
:
{ before(grammarAccess.getAssignmentStmtRule()); }
	 ruleAssignmentStmt
{ after(grammarAccess.getAssignmentStmtRule()); } 
	 EOF 
;

// Rule AssignmentStmt
ruleAssignmentStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentStmtAccess().getGroup()); }
(rule__AssignmentStmt__Group__0)
{ after(grammarAccess.getAssignmentStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLVal
entryRuleLVal 
:
{ before(grammarAccess.getLValRule()); }
	 ruleLVal
{ after(grammarAccess.getLValRule()); } 
	 EOF 
;

// Rule LVal
ruleLVal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLValAccess().getGroup()); }
(rule__LVal__Group__0)
{ after(grammarAccess.getLValAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getGroup()); }
(rule__Expr__Group__0)
{ after(grammarAccess.getExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseOrExpr
entryRuleBitwiseOrExpr 
:
{ before(grammarAccess.getBitwiseOrExprRule()); }
	 ruleBitwiseOrExpr
{ after(grammarAccess.getBitwiseOrExprRule()); } 
	 EOF 
;

// Rule BitwiseOrExpr
ruleBitwiseOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getGroup()); }
(rule__BitwiseOrExpr__Group__0)
{ after(grammarAccess.getBitwiseOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXorExpr
entryRuleXorExpr 
:
{ before(grammarAccess.getXorExprRule()); }
	 ruleXorExpr
{ after(grammarAccess.getXorExprRule()); } 
	 EOF 
;

// Rule XorExpr
ruleXorExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorExprAccess().getGroup()); }
(rule__XorExpr__Group__0)
{ after(grammarAccess.getXorExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseAndExpr
entryRuleBitwiseAndExpr 
:
{ before(grammarAccess.getBitwiseAndExprRule()); }
	 ruleBitwiseAndExpr
{ after(grammarAccess.getBitwiseAndExprRule()); } 
	 EOF 
;

// Rule BitwiseAndExpr
ruleBitwiseAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup()); }
(rule__BitwiseAndExpr__Group__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr 
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
(rule__EqualityExpr__Group__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpr
entryRuleCompareExpr 
:
{ before(grammarAccess.getCompareExprRule()); }
	 ruleCompareExpr
{ after(grammarAccess.getCompareExprRule()); } 
	 EOF 
;

// Rule CompareExpr
ruleCompareExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExprAccess().getGroup()); }
(rule__CompareExpr__Group__0)
{ after(grammarAccess.getCompareExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftExpr
entryRuleShiftExpr 
:
{ before(grammarAccess.getShiftExprRule()); }
	 ruleShiftExpr
{ after(grammarAccess.getShiftExprRule()); } 
	 EOF 
;

// Rule ShiftExpr
ruleShiftExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftExprAccess().getGroup()); }
(rule__ShiftExpr__Group__0)
{ after(grammarAccess.getShiftExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr 
:
{ before(grammarAccess.getAdditiveExprRule()); }
	 ruleAdditiveExpr
{ after(grammarAccess.getAdditiveExprRule()); } 
	 EOF 
;

// Rule AdditiveExpr
ruleAdditiveExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup()); }
(rule__AdditiveExpr__Group__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr 
:
{ before(grammarAccess.getMultiplicativeExprRule()); }
	 ruleMultiplicativeExpr
{ after(grammarAccess.getMultiplicativeExprRule()); } 
	 EOF 
;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
(rule__MultiplicativeExpr__Group__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpr
entryRuleTerminalExpr 
:
{ before(grammarAccess.getTerminalExprRule()); }
	 ruleTerminalExpr
{ after(grammarAccess.getTerminalExprRule()); } 
	 EOF 
;

// Rule TerminalExpr
ruleTerminalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExprAccess().getAlternatives()); }
(rule__TerminalExpr__Alternatives)
{ after(grammarAccess.getTerminalExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallExpr
entryRuleCallExpr 
:
{ before(grammarAccess.getCallExprRule()); }
	 ruleCallExpr
{ after(grammarAccess.getCallExprRule()); } 
	 EOF 
;

// Rule CallExpr
ruleCallExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallExprAccess().getGroup()); }
(rule__CallExpr__Group__0)
{ after(grammarAccess.getCallExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSign
entryRuleSign 
:
{ before(grammarAccess.getSignRule()); }
	 ruleSign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule Sign
ruleSign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignAccess().getAlternatives()); }
(rule__Sign__Alternatives)
{ after(grammarAccess.getSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpType
entryRuleSimpType 
:
{ before(grammarAccess.getSimpTypeRule()); }
	 ruleSimpType
{ after(grammarAccess.getSimpTypeRule()); } 
	 EOF 
;

// Rule SimpType
ruleSimpType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpTypeAccess().getAlternatives()); }
(rule__SimpType__Alternatives)
{ after(grammarAccess.getSimpTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigned
entryRuleSigned 
:
{ before(grammarAccess.getSignedRule()); }
	 ruleSigned
{ after(grammarAccess.getSignedRule()); } 
	 EOF 
;

// Rule Signed
ruleSigned
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignedAccess().getAlternatives()); }
(rule__Signed__Alternatives)
{ after(grammarAccess.getSignedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleStmtKeyword
entryRuleSimpleStmtKeyword 
:
{ before(grammarAccess.getSimpleStmtKeywordRule()); }
	 ruleSimpleStmtKeyword
{ after(grammarAccess.getSimpleStmtKeywordRule()); } 
	 EOF 
;

// Rule SimpleStmtKeyword
ruleSimpleStmtKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleStmtKeywordAccess().getAlternatives()); }
(rule__SimpleStmtKeyword__Alternatives)
{ after(grammarAccess.getSimpleStmtKeywordAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForAllFunction
entryRuleForAllFunction 
:
{ before(grammarAccess.getForAllFunctionRule()); }
	 ruleForAllFunction
{ after(grammarAccess.getForAllFunctionRule()); } 
	 EOF 
;

// Rule ForAllFunction
ruleForAllFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForAllFunctionAccess().getAlternatives()); }
(rule__ForAllFunction__Alternatives)
{ after(grammarAccess.getForAllFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeVarScope
entryRuleNodeVarScope 
:
{ before(grammarAccess.getNodeVarScopeRule()); }
	 ruleNodeVarScope
{ after(grammarAccess.getNodeVarScopeRule()); } 
	 EOF 
;

// Rule NodeVarScope
ruleNodeVarScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeVarScopeAccess().getAlternatives()); }
(rule__NodeVarScope__Alternatives)
{ after(grammarAccess.getNodeVarScopeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFunction
entryRuleBuiltInFunction 
:
{ before(grammarAccess.getBuiltInFunctionRule()); }
	 ruleBuiltInFunction
{ after(grammarAccess.getBuiltInFunctionRule()); } 
	 EOF 
;

// Rule BuiltInFunction
ruleBuiltInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
(rule__BuiltInFunction__Alternatives)
{ after(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getAlternatives()); }
(rule__Double__Alternatives)
{ after(grammarAccess.getDoubleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ShiftOperator
ruleShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
(rule__ShiftOperator__Alternatives)
{ after(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AdditiveOperator
ruleAdditiveOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
(rule__AdditiveOperator__Alternatives)
{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultiplicativeOperator
ruleMultiplicativeOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
(rule__MultiplicativeOperator__Alternatives)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__ProgramElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramElementAccess().getConstantParserRuleCall_0()); }
	ruleConstant
{ after(grammarAccess.getProgramElementAccess().getConstantParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getProgramElementAccess().getNodeParserRuleCall_1()); }
	ruleNode
{ after(grammarAccess.getProgramElementAccess().getNodeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getProgramElementAccess().getProcedureParserRuleCall_2()); }
	ruleProcedure
{ after(grammarAccess.getProgramElementAccess().getProcedureParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstKeyword_0_0()); }

	'const' 

{ after(grammarAccess.getConstantAccess().getConstKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getCONSTKeyword_0_1()); }

	'CONST' 

{ after(grammarAccess.getConstantAccess().getCONSTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberConst__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberConstAccess().getIntConstParserRuleCall_0()); }
	ruleIntConst
{ after(grammarAccess.getNumberConstAccess().getIntConstParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberConstAccess().getDoubleConstParserRuleCall_1()); }
	ruleDoubleConst
{ after(grammarAccess.getNumberConstAccess().getDoubleConstParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getNodeKeyword_0_0()); }

	'node' 

{ after(grammarAccess.getNodeNoAttrAccess().getNodeKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getNodeNoAttrAccess().getNODEKeyword_0_1()); }

	'NODE' 

{ after(grammarAccess.getNodeNoAttrAccess().getNODEKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getNodeNoAttrAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getNodeNoAttrAccess().getGroup_2_1()); }
(rule__NodeNoAttr__Group_2_1__0)
{ after(grammarAccess.getNodeNoAttrAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeBodyElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeBodyElementAccess().getVarBlockParserRuleCall_0()); }
	ruleVarBlock
{ after(grammarAccess.getNodeBodyElementAccess().getVarBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNodeBodyElementAccess().getRecordBlockParserRuleCall_1()); }
	ruleRecordBlock
{ after(grammarAccess.getNodeBodyElementAccess().getRecordBlockParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNodeBodyElementAccess().getProcedureParserRuleCall_2()); }
	ruleProcedure
{ after(grammarAccess.getNodeBodyElementAccess().getProcedureParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getGroup_0()); }
(rule__VarAsgn__Group_0__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVarAsgnAccess().getGroup_1()); }
(rule__VarAsgn__Group_1__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVarAsgnAccess().getGroup_2()); }
(rule__VarAsgn__Group_2__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getGroup_1_1_0()); }
(rule__VarAsgn__Group_1_1_0__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getVarAsgnAccess().getGroup_1_1_1()); }
(rule__VarAsgn__Group_1_1_1__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getGroup_2_1_0()); }
(rule__VarAsgn__Group_2_1_0__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_2_1_0()); }
)

    |(
{ before(grammarAccess.getVarAsgnAccess().getGroup_2_1_1()); }
(rule__VarAsgn__Group_2_1_1__0)
{ after(grammarAccess.getVarAsgnAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getGroup_0()); }
(rule__Dimension__Group_0__0)
{ after(grammarAccess.getDimensionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDimensionAccess().getGroup_1()); }
(rule__Dimension__Group_1__0)
{ after(grammarAccess.getDimensionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDimensionAccess().getGroup_2()); }
(rule__Dimension__Group_2__0)
{ after(grammarAccess.getDimensionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getProcedureAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getFnBodyAssignment_3_1()); }
(rule__Procedure__FnBodyAssignment_3_1)
{ after(grammarAccess.getProcedureAccess().getFnBodyAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_0()); }
(rule__FnPrototype__Group_0__0)
{ after(grammarAccess.getFnPrototypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1()); }
(rule__FnPrototype__Group_1__0)
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_0_1_0_0()); }

	'extern' 

{ after(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_0_1_0_1()); }

	'EXTERN' 

{ after(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAlternatives_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_0_2_0_0()); }

	'pure' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_0_2_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_0_2_0_1()); }

	'PURE' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_1_1_0_0()); }

	'extern' 

{ after(grammarAccess.getFnPrototypeAccess().getExternExternKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_1_1_0_1()); }

	'EXTERN' 

{ after(grammarAccess.getFnPrototypeAccess().getExternEXTERNKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAlternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_1_2_0_0()); }

	'pure' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePureKeyword_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_1_2_0_1()); }

	'PURE' 

{ after(grammarAccess.getFnPrototypeAccess().getPurePUREKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getGroup_0()); }
(rule__Stmt__Group_0__0)
{ after(grammarAccess.getStmtAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_1()); }
(rule__Stmt__Group_1__0)
{ after(grammarAccess.getStmtAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_2()); }
(rule__Stmt__Group_2__0)
{ after(grammarAccess.getStmtAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_3()); }
(rule__Stmt__Group_3__0)
{ after(grammarAccess.getStmtAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_4()); }
(rule__Stmt__Group_4__0)
{ after(grammarAccess.getStmtAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_5()); }
(rule__Stmt__Group_5__0)
{ after(grammarAccess.getStmtAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_6()); }
(rule__Stmt__Group_6__0)
{ after(grammarAccess.getStmtAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_7()); }
(rule__Stmt__Group_7__0)
{ after(grammarAccess.getStmtAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_8()); }
(rule__Stmt__Group_8__0)
{ after(grammarAccess.getStmtAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getGroup_9()); }
(rule__Stmt__Group_9__0)
{ after(grammarAccess.getStmtAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getForall_distinct_node_pairKeyword_9_1_0()); }

	'forall_distinct_node_pair' 

{ after(grammarAccess.getStmtAccess().getForall_distinct_node_pairKeyword_9_1_0()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getFORALL_DISTINCT_NODE_PAIRKeyword_9_1_1()); }

	'FORALL_DISTINCT_NODE_PAIR' 

{ after(grammarAccess.getStmtAccess().getFORALL_DISTINCT_NODE_PAIRKeyword_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLValParserRuleCall_0()); }
	ruleLVal
{ after(grammarAccess.getTerminalExprAccess().getLValParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_1()); }
(rule__TerminalExpr__Group_1__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_2()); }
(rule__TerminalExpr__Group_2__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_3()); }
(rule__TerminalExpr__Group_3__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_4()); }
(rule__TerminalExpr__Group_4__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_5()); }
(rule__TerminalExpr__Group_5__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_6()); }
(rule__TerminalExpr__Group_6__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getCallExprParserRuleCall_7()); }
	ruleCallExpr
{ after(grammarAccess.getTerminalExprAccess().getCallExprParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTerminalExprAccess().getGroup_8()); }
(rule__TerminalExpr__Group_8__0)
{ after(grammarAccess.getTerminalExprAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpTypeAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getSimpTypeAccess().getBoolKeyword_0()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().get_BoolKeyword_1()); }

	'_Bool' 

{ after(grammarAccess.getSimpTypeAccess().get_BoolKeyword_1()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getIntKeyword_2()); }

	'int' 

{ after(grammarAccess.getSimpTypeAccess().getIntKeyword_2()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getDoubleKeyword_3()); }

	'double' 

{ after(grammarAccess.getSimpTypeAccess().getDoubleKeyword_3()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getVoidKeyword_4()); }

	'void' 

{ after(grammarAccess.getSimpTypeAccess().getVoidKeyword_4()); }
)

    |(
{ before(grammarAccess.getSimpTypeAccess().getCharKeyword_5()); }

	'char' 

{ after(grammarAccess.getSimpTypeAccess().getCharKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signed__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedAccess().getSignedKeyword_0()); }

	'signed' 

{ after(grammarAccess.getSignedAccess().getSignedKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignedAccess().getUnsignedKeyword_1()); }

	'unsigned' 

{ after(grammarAccess.getSignedAccess().getUnsignedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStmtKeyword__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStmtKeywordAccess().getBreakKeyword_0()); }

	'break' 

{ after(grammarAccess.getSimpleStmtKeywordAccess().getBreakKeyword_0()); }
)

    |(
{ before(grammarAccess.getSimpleStmtKeywordAccess().getContinueKeyword_1()); }

	'continue' 

{ after(grammarAccess.getSimpleStmtKeywordAccess().getContinueKeyword_1()); }
)

    |(
{ before(grammarAccess.getSimpleStmtKeywordAccess().getReturnKeyword_2()); }

	'return' 

{ after(grammarAccess.getSimpleStmtKeywordAccess().getReturnKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForAllFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForAllFunctionAccess().getForall_nodeKeyword_0()); }

	'forall_node' 

{ after(grammarAccess.getForAllFunctionAccess().getForall_nodeKeyword_0()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getFORALL_NODEKeyword_1()); }

	'FORALL_NODE' 

{ after(grammarAccess.getForAllFunctionAccess().getFORALL_NODEKeyword_1()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getForall_otherKeyword_2()); }

	'forall_other' 

{ after(grammarAccess.getForAllFunctionAccess().getForall_otherKeyword_2()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getFORALL_OTHERKeyword_3()); }

	'FORALL_OTHER' 

{ after(grammarAccess.getForAllFunctionAccess().getFORALL_OTHERKeyword_3()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getForall_other_lowerKeyword_4()); }

	'forall_other_lower' 

{ after(grammarAccess.getForAllFunctionAccess().getForall_other_lowerKeyword_4()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getFORALL_OTHER_LOWERKeyword_5()); }

	'FORALL_OTHER_LOWER' 

{ after(grammarAccess.getForAllFunctionAccess().getFORALL_OTHER_LOWERKeyword_5()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getForall_other_higherKeyword_6()); }

	'forall_other_higher' 

{ after(grammarAccess.getForAllFunctionAccess().getForall_other_higherKeyword_6()); }
)

    |(
{ before(grammarAccess.getForAllFunctionAccess().getFORALL_OTHER_HIGHERKeyword_7()); }

	'FORALL_OTHER_HIGHER' 

{ after(grammarAccess.getForAllFunctionAccess().getFORALL_OTHER_HIGHERKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeVarScope__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeVarScopeAccess().getGlobalKeyword_0()); }

	'global' 

{ after(grammarAccess.getNodeVarScopeAccess().getGlobalKeyword_0()); }
)

    |(
{ before(grammarAccess.getNodeVarScopeAccess().getGLOBALKeyword_1()); }

	'GLOBAL' 

{ after(grammarAccess.getNodeVarScopeAccess().getGLOBALKeyword_1()); }
)

    |(
{ before(grammarAccess.getNodeVarScopeAccess().getLocalKeyword_2()); }

	'local' 

{ after(grammarAccess.getNodeVarScopeAccess().getLocalKeyword_2()); }
)

    |(
{ before(grammarAccess.getNodeVarScopeAccess().getLOCALKeyword_3()); }

	'LOCAL' 

{ after(grammarAccess.getNodeVarScopeAccess().getLOCALKeyword_3()); }
)

    |(
{ before(grammarAccess.getNodeVarScopeAccess().getGroupKeyword_4()); }

	'group' 

{ after(grammarAccess.getNodeVarScopeAccess().getGroupKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_otherKeyword_0()); }

	'exists_other' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_otherKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_OTHERKeyword_1()); }

	'EXISTS_OTHER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_OTHERKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_higherKeyword_2()); }

	'exists_higher' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_higherKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_HIGHERKeyword_3()); }

	'EXISTS_HIGHER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_HIGHERKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getExists_lowerKeyword_4()); }

	'exists_lower' 

{ after(grammarAccess.getBuiltInFunctionAccess().getExists_lowerKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getEXISTS_LOWERKeyword_5()); }

	'EXISTS_LOWER' 

{ after(grammarAccess.getBuiltInFunctionAccess().getEXISTS_LOWERKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getNANKeyword_0()); }

	'NAN' 

{ after(grammarAccess.getDoubleAccess().getNANKeyword_0()); }
)

    |(
{ before(grammarAccess.getDoubleAccess().getGroup_1()); }
(rule__Double__Group_1__0)
{ after(grammarAccess.getDoubleAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_1()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLESS_EQUALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGREATEREnumLiteralDeclaration_2()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGREATEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGREATER_EQUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
(	'<<' 
)
{ after(grammarAccess.getShiftOperatorAccess().getLEFTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
(	'>>' 
)
{ after(grammarAccess.getShiftOperatorAccess().getRIGHTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getSUBTRACTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLYEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getMULTIPLYEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getDIVIDEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getMODULUSEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getMODULUSEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getLOGICAL_NOTEnumLiteralDeclaration_2()); }
(	'!' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getLOGICAL_NOTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration_3()); }
(	'~' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
(

)
{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramElementsAssignment_1()); }
(rule__Program__ProgramElementsAssignment_1)*
{ after(grammarAccess.getProgramAccess().getProgramElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DmplSubclause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DmplSubclause__Group__0__Impl
	rule__DmplSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getDmplSubclauseAction_0()); }
(

)
{ after(grammarAccess.getDmplSubclauseAccess().getDmplSubclauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DmplSubclause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DmplSubclause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getProgramAssignment_1()); }
(rule__DmplSubclause__ProgramAssignment_1)
{ after(grammarAccess.getDmplSubclauseAccess().getProgramAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getAlternatives_0()); }
(rule__Constant__Alternatives_0)
{ after(grammarAccess.getConstantAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_3()); }
(rule__Constant__ValueAssignment_3)
{ after(grammarAccess.getConstantAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__IntConst__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConst__Group__0__Impl
	rule__IntConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getSignAssignment_0()); }
(rule__IntConst__SignAssignment_0)?
{ after(grammarAccess.getIntConstAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntConst__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getValueAssignment_1()); }
(rule__IntConst__ValueAssignment_1)
{ after(grammarAccess.getIntConstAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoubleConst__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConst__Group__0__Impl
	rule__DoubleConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getSignAssignment_0()); }
(rule__DoubleConst__SignAssignment_0)?
{ after(grammarAccess.getDoubleConstAccess().getSignAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleConst__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoubleConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getValueAssignment_1()); }
(rule__DoubleConst__ValueAssignment_1)
{ after(grammarAccess.getDoubleConstAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeNoAttr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group__0__Impl
	rule__NodeNoAttr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getAlternatives_0()); }
(rule__NodeNoAttr__Alternatives_0)
{ after(grammarAccess.getNodeNoAttrAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNoAttr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group__1__Impl
	rule__NodeNoAttr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getNameAssignment_1()); }
(rule__NodeNoAttr__NameAssignment_1)
{ after(grammarAccess.getNodeNoAttrAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNoAttr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getAlternatives_2()); }
(rule__NodeNoAttr__Alternatives_2)
{ after(grammarAccess.getNodeNoAttrAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeNoAttr__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group_2_1__0__Impl
	rule__NodeNoAttr__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getNodeNoAttrAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNoAttr__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group_2_1__1__Impl
	rule__NodeNoAttr__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getBodyAssignment_2_1_1()); }
(rule__NodeNoAttr__BodyAssignment_2_1_1)
{ after(grammarAccess.getNodeNoAttrAccess().getBodyAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeNoAttr__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeNoAttr__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getNodeNoAttrAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeBody__Group__0__Impl
	rule__NodeBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeBodyAccess().getNodeBodyAction_0()); }
(

)
{ after(grammarAccess.getNodeBodyAccess().getNodeBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeBodyAccess().getElementsAssignment_1()); }
(rule__NodeBody__ElementsAssignment_1)*
{ after(grammarAccess.getNodeBodyAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group__0__Impl
	rule__VarBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getOverrideAssignment_0()); }
(rule__VarBlock__OverrideAssignment_0)?
{ after(grammarAccess.getVarBlockAccess().getOverrideAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group__1__Impl
	rule__VarBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getVarAssignment_1()); }
(rule__VarBlock__VarAssignment_1)
{ after(grammarAccess.getVarBlockAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getVarBlockAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeVarInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeVarInit__Group__0__Impl
	rule__NodeVarInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeVarInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeVarInitAccess().getScopeAssignment_0()); }
(rule__NodeVarInit__ScopeAssignment_0)
{ after(grammarAccess.getNodeVarInitAccess().getScopeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeVarInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeVarInit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeVarInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeVarInitAccess().getVarAssignment_1()); }
(rule__NodeVarInit__VarAssignment_1)
{ after(grammarAccess.getNodeVarInitAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Record__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__0__Impl
	rule__Record__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getRecordKeyword_0()); }

	'record' 

{ after(grammarAccess.getRecordAccess().getRecordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__1__Impl
	rule__Record__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getNameAssignment_1()); }
(rule__Record__NameAssignment_1)
{ after(grammarAccess.getRecordAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__2__Impl
	rule__Record__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRecordAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__3__Impl
	rule__Record__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordAccess().getGroup_3()); }
(rule__Record__Group_3__0)
{ after(grammarAccess.getRecordAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getRecordAccess().getGroup_3()); }
(rule__Record__Group_3__0)*
{ after(grammarAccess.getRecordAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__4__Impl
	rule__Record__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRecordAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__5__Impl
	rule__Record__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getGroup_5()); }
(rule__Record__Group_5__0)?
{ after(grammarAccess.getRecordAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getGroup_6()); }
(rule__Record__Group_6__0)?
{ after(grammarAccess.getRecordAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Record__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_3__0__Impl
	rule__Record__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getVarsAssignment_3_0()); }
(rule__Record__VarsAssignment_3_0)
{ after(grammarAccess.getRecordAccess().getVarsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getRecordAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Record__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_5__0__Impl
	rule__Record__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getEqualsSignKeyword_5_0()); }

	'=' 

{ after(grammarAccess.getRecordAccess().getEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getEqualsBodyAssignment_5_1()); }
(rule__Record__EqualsBodyAssignment_5_1)
{ after(grammarAccess.getRecordAccess().getEqualsBodyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Record__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_6__0__Impl
	rule__Record__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getTildeKeyword_6_0()); }

	'~' 

{ after(grammarAccess.getRecordAccess().getTildeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getComplementBodyAssignment_6_1()); }
(rule__Record__ComplementBodyAssignment_6_1)
{ after(grammarAccess.getRecordAccess().getComplementBodyAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group__0__Impl
	rule__VarInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getTypeAssignment_0()); }
(rule__VarInit__TypeAssignment_0)
{ after(grammarAccess.getVarInitAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group__1__Impl
	rule__VarInit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnsAssignment_1()); }
(rule__VarInit__VarAsgnsAssignment_1)
{ after(grammarAccess.getVarInitAccess().getVarAsgnsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getGroup_2()); }
(rule__VarInit__Group_2__0)*
{ after(grammarAccess.getVarInitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarInit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group_2__0__Impl
	rule__VarInit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getVarInitAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarInit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarInit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnsAssignment_2_1()); }
(rule__VarInit__VarAsgnsAssignment_2_1)
{ after(grammarAccess.getVarInitAccess().getVarAsgnsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarAsgn__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_0__0__Impl
	rule__VarAsgn__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputAssignment_0_0()); }
(rule__VarAsgn__InputAssignment_0_0)?
{ after(grammarAccess.getVarAsgnAccess().getInputAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_0_1()); }
(rule__VarAsgn__VarAssignment_0_1)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarAsgn__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1__0__Impl
	rule__VarAsgn__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getExprVarAsgnAction_1_0()); }
(

)
{ after(grammarAccess.getVarAsgnAccess().getExprVarAsgnAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1__1__Impl
	rule__VarAsgn__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getAlternatives_1_1()); }
(rule__VarAsgn__Alternatives_1_1)
{ after(grammarAccess.getVarAsgnAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getExprAssignment_1_2()); }
(rule__VarAsgn__ExprAssignment_1_2)
{ after(grammarAccess.getVarAsgnAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarAsgn__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1_1_0__0__Impl
	rule__VarAsgn__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_1_1_0_0()); }
(rule__VarAsgn__VarAssignment_1_1_0_0)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_1_1_0_1()); }

	'=' 

{ after(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarAsgn__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1_1_1__0__Impl
	rule__VarAsgn__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputAssignment_1_1_1_0()); }
(rule__VarAsgn__InputAssignment_1_1_1_0)
{ after(grammarAccess.getVarAsgnAccess().getInputAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1_1_1__1__Impl
	rule__VarAsgn__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_1_1_1_1()); }
(rule__VarAsgn__VarAssignment_1_1_1_1)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getTildeKeyword_1_1_1_2()); }

	'~' 

{ after(grammarAccess.getVarAsgnAccess().getTildeKeyword_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarAsgn__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2__0__Impl
	rule__VarAsgn__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getFnVarAsgnAction_2_0()); }
(

)
{ after(grammarAccess.getVarAsgnAccess().getFnVarAsgnAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2__1__Impl
	rule__VarAsgn__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getAlternatives_2_1()); }
(rule__VarAsgn__Alternatives_2_1)
{ after(grammarAccess.getVarAsgnAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getFnBodyAssignment_2_2()); }
(rule__VarAsgn__FnBodyAssignment_2_2)
{ after(grammarAccess.getVarAsgnAccess().getFnBodyAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarAsgn__Group_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2_1_0__0__Impl
	rule__VarAsgn__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_2_1_0_0()); }
(rule__VarAsgn__VarAssignment_2_1_0_0)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_2_1_0_1()); }

	'=' 

{ after(grammarAccess.getVarAsgnAccess().getEqualsSignKeyword_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarAsgn__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2_1_1__0__Impl
	rule__VarAsgn__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputAssignment_2_1_1_0()); }
(rule__VarAsgn__InputAssignment_2_1_1_0)
{ after(grammarAccess.getVarAsgnAccess().getInputAssignment_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2_1_1__1__Impl
	rule__VarAsgn__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarAssignment_2_1_1_1()); }
(rule__VarAsgn__VarAssignment_2_1_1_1)
{ after(grammarAccess.getVarAsgnAccess().getVarAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarAsgn__Group_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarAsgn__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__Group_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getTildeKeyword_2_1_1_2()); }

	'~' 

{ after(grammarAccess.getVarAsgnAccess().getTildeKeyword_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Var__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameAssignment_0()); }
(rule__Var__NameAssignment_0)
{ after(grammarAccess.getVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getGroup_1()); }
(rule__Var__Group_1__0)*
{ after(grammarAccess.getVarAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__0__Impl
	rule__Var__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__1__Impl
	rule__Var__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getDimensionsAssignment_1_1()); }
(rule__Var__DimensionsAssignment_1_1)
{ after(grammarAccess.getVarAccess().getDimensionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Dimension__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_0__0__Impl
	rule__Dimension__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIntDimensionAction_0_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getIntDimensionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexAssignment_0_1()); }
(rule__Dimension__IndexAssignment_0_1)
{ after(grammarAccess.getDimensionAccess().getIndexAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dimension__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_1__0__Impl
	rule__Dimension__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getNodeNumDimensionAction_1_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getNodeNumDimensionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getNKeyword_1_1()); }

	'#N' 

{ after(grammarAccess.getDimensionAccess().getNKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dimension__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_2__0__Impl
	rule__Dimension__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIdDimensionAction_2_0()); }
(

)
{ after(grammarAccess.getDimensionAccess().getIdDimensionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dimension__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexAssignment_2_1()); }
(rule__Dimension__IndexAssignment_2_1)
{ after(grammarAccess.getDimensionAccess().getIndexAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSignedAssignment_0()); }
(rule__Type__SignedAssignment_0)?
{ after(grammarAccess.getTypeAccess().getSignedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpTypeAssignment_1()); }
(rule__Type__SimpTypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getSimpTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getAttrListAssignment_0()); }
(rule__Procedure__AttrListAssignment_0)?
{ after(grammarAccess.getProcedureAccess().getAttrListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getOverrideAssignment_1()); }
(rule__Procedure__OverrideAssignment_1)?
{ after(grammarAccess.getProcedureAccess().getOverrideAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__2__Impl
	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getPrototypeAssignment_2()); }
(rule__Procedure__PrototypeAssignment_2)
{ after(grammarAccess.getProcedureAccess().getPrototypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getAlternatives_3()); }
(rule__Procedure__Alternatives_3)
{ after(grammarAccess.getProcedureAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FnBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__0__Impl
	rule__FnBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getFnBodyAction_0()); }
(

)
{ after(grammarAccess.getFnBodyAccess().getFnBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__1__Impl
	rule__FnBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFnBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__2__Impl
	rule__FnBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getGroup_2()); }
(rule__FnBody__Group_2__0)*
{ after(grammarAccess.getFnBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__3__Impl
	rule__FnBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getStmtsAssignment_3()); }
(rule__FnBody__StmtsAssignment_3)*
{ after(grammarAccess.getFnBodyAccess().getStmtsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getFnBodyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FnBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group_2__0__Impl
	rule__FnBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getVarInitsAssignment_2_0()); }
(rule__FnBody__VarInitsAssignment_2_0)
{ after(grammarAccess.getFnBodyAccess().getVarInitsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnBody__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getFnBodyAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnPrototype__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__0__Impl
	rule__FnPrototype__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getThreadDeclarationAction_0_0()); }
(

)
{ after(grammarAccess.getFnPrototypeAccess().getThreadDeclarationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__1__Impl
	rule__FnPrototype__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAssignment_0_1()); }
(rule__FnPrototype__ExternAssignment_0_1)?
{ after(grammarAccess.getFnPrototypeAccess().getExternAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__2__Impl
	rule__FnPrototype__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAssignment_0_2()); }
(rule__FnPrototype__PureAssignment_0_2)?
{ after(grammarAccess.getFnPrototypeAccess().getPureAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__3__Impl
	rule__FnPrototype__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getThreadKeyword_0_3()); }

	'thread' 

{ after(grammarAccess.getFnPrototypeAccess().getThreadKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameAssignment_0_4()); }
(rule__FnPrototype__NameAssignment_0_4)
{ after(grammarAccess.getFnPrototypeAccess().getNameAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FnPrototype__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__0__Impl
	rule__FnPrototype__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getFnPrototypeDeclarationAction_1_0()); }
(

)
{ after(grammarAccess.getFnPrototypeAccess().getFnPrototypeDeclarationAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__1__Impl
	rule__FnPrototype__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAssignment_1_1()); }
(rule__FnPrototype__ExternAssignment_1_1)?
{ after(grammarAccess.getFnPrototypeAccess().getExternAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__2__Impl
	rule__FnPrototype__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAssignment_1_2()); }
(rule__FnPrototype__PureAssignment_1_2)?
{ after(grammarAccess.getFnPrototypeAccess().getPureAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__3__Impl
	rule__FnPrototype__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getTypeAssignment_1_3()); }
(rule__FnPrototype__TypeAssignment_1_3)
{ after(grammarAccess.getFnPrototypeAccess().getTypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__4__Impl
	rule__FnPrototype__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameAssignment_1_4()); }
(rule__FnPrototype__NameAssignment_1_4)
{ after(grammarAccess.getFnPrototypeAccess().getNameAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__5__Impl
	rule__FnPrototype__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getLeftParenthesisKeyword_1_5()); }

	'(' 

{ after(grammarAccess.getFnPrototypeAccess().getLeftParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__6__Impl
	rule__FnPrototype__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1_6()); }
(rule__FnPrototype__Group_1_6__0)?
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getRightParenthesisKeyword_1_7()); }

	')' 

{ after(grammarAccess.getFnPrototypeAccess().getRightParenthesisKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FnPrototype__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6__0__Impl
	rule__FnPrototype__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_0()); }
(rule__FnPrototype__ParamsAssignment_1_6_0)
{ after(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getGroup_1_6_1()); }
(rule__FnPrototype__Group_1_6_1__0)*
{ after(grammarAccess.getFnPrototypeAccess().getGroup_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FnPrototype__Group_1_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6_1__0__Impl
	rule__FnPrototype__Group_1_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getCommaKeyword_1_6_1_0()); }

	',' 

{ after(grammarAccess.getFnPrototypeAccess().getCommaKeyword_1_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FnPrototype__Group_1_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FnPrototype__Group_1_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__Group_1_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_1_1()); }
(rule__FnPrototype__ParamsAssignment_1_6_1_1)
{ after(grammarAccess.getFnPrototypeAccess().getParamsAssignment_1_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group__0__Impl
	rule__AttrList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrsAssignment_0()); }
(rule__AttrList__AttrsAssignment_0)
{ after(grammarAccess.getAttrListAccess().getAttrsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getAttrListAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__0__Impl
	rule__Attr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAttrAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__1__Impl
	rule__Attr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameAssignment_1()); }
(rule__Attr__NameAssignment_1)
{ after(grammarAccess.getAttrAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getGroup_2()); }
(rule__Attr__Group_2__0)?
{ after(grammarAccess.getAttrAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__0__Impl
	rule__Attr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAttrAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__1__Impl
	rule__Attr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getParamsAssignment_2_1()); }
(rule__Attr__ParamsAssignment_2_1)
{ after(grammarAccess.getAttrAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__2__Impl
	rule__Attr__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getGroup_2_2()); }
(rule__Attr__Group_2_2__0)*
{ after(grammarAccess.getAttrAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAttrAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Attr__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2_2__0__Impl
	rule__Attr__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAttrAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attr__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attr__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getParamsAssignment_2_2_1()); }
(rule__Attr__ParamsAssignment_2_2_1)
{ after(grammarAccess.getAttrAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeAssignment_0()); }
(rule__Param__TypeAssignment_0)
{ after(grammarAccess.getParamAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarAssignment_1()); }
(rule__Param__VarAssignment_1)
{ after(grammarAccess.getParamAccess().getVarAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_0__0__Impl
	rule__Stmt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNestedStmtAction_0_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getNestedStmtAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_0__1__Impl
	rule__Stmt__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftCurlyBracketKeyword_0_1()); }

	'{' 

{ after(grammarAccess.getStmtAccess().getLeftCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_0__2__Impl
	rule__Stmt__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtsAssignment_0_2()); }
(rule__Stmt__StmtsAssignment_0_2)*
{ after(grammarAccess.getStmtAccess().getStmtsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightCurlyBracketKeyword_0_3()); }

	'}' 

{ after(grammarAccess.getStmtAccess().getRightCurlyBracketKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Stmt__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_1__0__Impl
	rule__Stmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getAssignmentStmtParserRuleCall_1_0()); }
	ruleAssignmentStmt
{ after(grammarAccess.getStmtAccess().getAssignmentStmtParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__0__Impl
	rule__Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getWhileStmtAction_2_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getWhileStmtAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__1__Impl
	rule__Stmt__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getWhileKeyword_2_1()); }

	'while' 

{ after(grammarAccess.getStmtAccess().getWhileKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__2__Impl
	rule__Stmt__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__3__Impl
	rule__Stmt__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionAssignment_2_3()); }
(rule__Stmt__ConditionAssignment_2_3)
{ after(grammarAccess.getStmtAccess().getConditionAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__4__Impl
	rule__Stmt__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightParenthesisKeyword_2_4()); }

	')' 

{ after(grammarAccess.getStmtAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtAssignment_2_5()); }
(rule__Stmt__StmtAssignment_2_5)
{ after(grammarAccess.getStmtAccess().getStmtAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Stmt__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__0__Impl
	rule__Stmt__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getForStmtAction_3_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getForStmtAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__1__Impl
	rule__Stmt__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getForKeyword_3_1()); }

	'for' 

{ after(grammarAccess.getStmtAccess().getForKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__2__Impl
	rule__Stmt__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_3_2()); }

	'(' 

{ after(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__3__Impl
	rule__Stmt__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getGroup_3_3()); }
(rule__Stmt__Group_3_3__0)?
{ after(grammarAccess.getStmtAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__4__Impl
	rule__Stmt__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_3_4()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__5__Impl
	rule__Stmt__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionAssignment_3_5()); }
(rule__Stmt__ConditionAssignment_3_5)?
{ after(grammarAccess.getStmtAccess().getConditionAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__6__Impl
	rule__Stmt__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_3_6()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__7__Impl
	rule__Stmt__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getUpdateAssignment_3_7()); }
(rule__Stmt__UpdateAssignment_3_7)?
{ after(grammarAccess.getStmtAccess().getUpdateAssignment_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__8__Impl
	rule__Stmt__Group_3__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightParenthesisKeyword_3_8()); }

	')' 

{ after(grammarAccess.getStmtAccess().getRightParenthesisKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtAssignment_3_9()); }
(rule__Stmt__StmtAssignment_3_9)
{ after(grammarAccess.getStmtAccess().getStmtAssignment_3_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Stmt__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3_3__0__Impl
	rule__Stmt__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getInitsAssignment_3_3_0()); }
(rule__Stmt__InitsAssignment_3_3_0)
{ after(grammarAccess.getStmtAccess().getInitsAssignment_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getGroup_3_3_1()); }
(rule__Stmt__Group_3_3_1__0)*
{ after(grammarAccess.getStmtAccess().getGroup_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_3_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3_3_1__0__Impl
	rule__Stmt__Group_3_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getCommaKeyword_3_3_1_0()); }

	',' 

{ after(grammarAccess.getStmtAccess().getCommaKeyword_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_3_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_3_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_3_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getInitsAssignment_3_3_1_1()); }
(rule__Stmt__InitsAssignment_3_3_1_1)
{ after(grammarAccess.getStmtAccess().getInitsAssignment_3_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__0__Impl
	rule__Stmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getCondStmtAction_4_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getCondStmtAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__1__Impl
	rule__Stmt__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getAttrListAssignment_4_1()); }
(rule__Stmt__AttrListAssignment_4_1)?
{ after(grammarAccess.getStmtAccess().getAttrListAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__2__Impl
	rule__Stmt__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getIfKeyword_4_2()); }

	'if' 

{ after(grammarAccess.getStmtAccess().getIfKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__3__Impl
	rule__Stmt__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_4_3()); }

	'(' 

{ after(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__4__Impl
	rule__Stmt__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionAssignment_4_4()); }
(rule__Stmt__ConditionAssignment_4_4)
{ after(grammarAccess.getStmtAccess().getConditionAssignment_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__5__Impl
	rule__Stmt__Group_4__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightParenthesisKeyword_4_5()); }

	')' 

{ after(grammarAccess.getStmtAccess().getRightParenthesisKeyword_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__6__Impl
	rule__Stmt__Group_4__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getThenAssignment_4_6()); }
(rule__Stmt__ThenAssignment_4_6)
{ after(grammarAccess.getStmtAccess().getThenAssignment_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getGroup_4_7()); }
(rule__Stmt__Group_4_7__0)?
{ after(grammarAccess.getStmtAccess().getGroup_4_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Stmt__Group_4_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4_7__0__Impl
	rule__Stmt__Group_4_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getElseKeyword_4_7_0()); }
(
	'else' 
)
{ after(grammarAccess.getStmtAccess().getElseKeyword_4_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_4_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_4_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_4_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getElseAssignment_4_7_1()); }
(rule__Stmt__ElseAssignment_4_7_1)
{ after(grammarAccess.getStmtAccess().getElseAssignment_4_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_5__0__Impl
	rule__Stmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSimpleStmtAction_5_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getSimpleStmtAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_5__1__Impl
	rule__Stmt__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNameAssignment_5_1()); }
(rule__Stmt__NameAssignment_5_1)
{ after(grammarAccess.getStmtAccess().getNameAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_5_2()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Stmt__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_6__0__Impl
	rule__Stmt__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getReturnValueStmtAction_6_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getReturnValueStmtAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_6__1__Impl
	rule__Stmt__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getReturnKeyword_6_1()); }

	'return' 

{ after(grammarAccess.getStmtAccess().getReturnKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_6__2__Impl
	rule__Stmt__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getValueAssignment_6_2()); }
(rule__Stmt__ValueAssignment_6_2)
{ after(grammarAccess.getStmtAccess().getValueAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_6_3()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Stmt__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_7__0__Impl
	rule__Stmt__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getCallExprParserRuleCall_7_0()); }
	ruleCallExpr
{ after(grammarAccess.getStmtAccess().getCallExprParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getSemicolonKeyword_7_1()); }

	';' 

{ after(grammarAccess.getStmtAccess().getSemicolonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Stmt__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__0__Impl
	rule__Stmt__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getForAllStmtAction_8_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getForAllStmtAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__1__Impl
	rule__Stmt__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNameAssignment_8_1()); }
(rule__Stmt__NameAssignment_8_1)
{ after(grammarAccess.getStmtAccess().getNameAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__2__Impl
	rule__Stmt__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_8_2()); }

	'(' 

{ after(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__3__Impl
	rule__Stmt__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNodeAssignment_8_3()); }
(rule__Stmt__NodeAssignment_8_3)
{ after(grammarAccess.getStmtAccess().getNodeAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__4__Impl
	rule__Stmt__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightParenthesisKeyword_8_4()); }

	')' 

{ after(grammarAccess.getStmtAccess().getRightParenthesisKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_8__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_8__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_8__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtAssignment_8_5()); }
(rule__Stmt__StmtAssignment_8_5)
{ after(grammarAccess.getStmtAccess().getStmtAssignment_8_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Stmt__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__0__Impl
	rule__Stmt__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getFadnpStmtAction_9_0()); }
(

)
{ after(grammarAccess.getStmtAccess().getFadnpStmtAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__1__Impl
	rule__Stmt__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getAlternatives_9_1()); }
(rule__Stmt__Alternatives_9_1)
{ after(grammarAccess.getStmtAccess().getAlternatives_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__2__Impl
	rule__Stmt__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_9_2()); }

	'(' 

{ after(grammarAccess.getStmtAccess().getLeftParenthesisKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__3__Impl
	rule__Stmt__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNode1Assignment_9_3()); }
(rule__Stmt__Node1Assignment_9_3)
{ after(grammarAccess.getStmtAccess().getNode1Assignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__4__Impl
	rule__Stmt__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getCommaKeyword_9_4()); }

	',' 

{ after(grammarAccess.getStmtAccess().getCommaKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__5__Impl
	rule__Stmt__Group_9__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNode2Assignment_9_5()); }
(rule__Stmt__Node2Assignment_9_5)
{ after(grammarAccess.getStmtAccess().getNode2Assignment_9_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__6__Impl
	rule__Stmt__Group_9__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getRightParenthesisKeyword_9_6()); }

	')' 

{ after(grammarAccess.getStmtAccess().getRightParenthesisKeyword_9_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_9__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stmt__Group_9__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_9__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtAssignment_9_7()); }
(rule__Stmt__StmtAssignment_9_7)
{ after(grammarAccess.getStmtAccess().getStmtAssignment_9_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AssignmentStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStmt__Group__0__Impl
	rule__AssignmentStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStmtAccess().getVariableAssignment_0()); }
(rule__AssignmentStmt__VariableAssignment_0)
{ after(grammarAccess.getAssignmentStmtAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStmt__Group__1__Impl
	rule__AssignmentStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStmtAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentStmtAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentStmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStmtAccess().getValueAssignment_2()); }
(rule__AssignmentStmt__ValueAssignment_2)
{ after(grammarAccess.getAssignmentStmtAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LVal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__0__Impl
	rule__LVal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getNameAssignment_0()); }
(rule__LVal__NameAssignment_0)
{ after(grammarAccess.getLValAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__1__Impl
	rule__LVal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getGroup_1()); }
(rule__LVal__Group_1__0)*
{ after(grammarAccess.getLValAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getGroup_2()); }
(rule__LVal__Group_2__0)?
{ after(grammarAccess.getLValAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LVal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__0__Impl
	rule__LVal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getLValAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__1__Impl
	rule__LVal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getIndicesAssignment_1_1()); }
(rule__LVal__IndicesAssignment_1_1)
{ after(grammarAccess.getLValAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getLValAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LVal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_2__0__Impl
	rule__LVal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getCommercialAtKeyword_2_0()); }

	'@' 

{ after(grammarAccess.getLValAccess().getCommercialAtKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LVal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LVal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getAtAssignment_2_1()); }
(rule__LVal__AtAssignment_2_1)
{ after(grammarAccess.getLValAccess().getAtAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__0__Impl
	rule__Expr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getExprAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_1()); }
(rule__Expr__Group_1__0)?
{ after(grammarAccess.getExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_1_0()); }
(rule__Expr__Group_1_0__0)
{ after(grammarAccess.getExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__1__Impl
	rule__Expr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getThenAssignment_1_1()); }
(rule__Expr__ThenAssignment_1_1)
{ after(grammarAccess.getExprAccess().getThenAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__2__Impl
	rule__Expr__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getExprAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getElseAssignment_1_3()); }
(rule__Expr__ElseAssignment_1_3)
{ after(grammarAccess.getExprAccess().getElseAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getGroup_1_0_0()); }
(rule__Expr__Group_1_0_0__0)
{ after(grammarAccess.getExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Expr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1_0_0__0__Impl
	rule__Expr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getTernaryExprConditionAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExprAccess().getTernaryExprConditionAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getQuestionMarkKeyword_1_0_0_1()); }

	'?' 

{ after(grammarAccess.getExprAccess().getQuestionMarkKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)*
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0()); }
(rule__OrExpr__Group_1_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
(rule__OrExpr__RightAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
(rule__OrExpr__Group_1_0_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__0__Impl
	rule__OrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOrExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getOrExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_0_0_1()); }

	'||' 

{ after(grammarAccess.getOrExprAccess().getVerticalLineVerticalLineKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getBitwiseOrExprParserRuleCall_0()); }
	ruleBitwiseOrExpr
{ after(grammarAccess.getAndExprAccess().getBitwiseOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0()); }
(rule__AndExpr__Group_1_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
(rule__AndExpr__RightAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
(rule__AndExpr__Group_1_0_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__0__Impl
	rule__AndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAndExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getAndExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0_0_1()); }

	'&&' 

{ after(grammarAccess.getAndExprAccess().getAmpersandAmpersandKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group__0__Impl
	rule__BitwiseOrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getXorExprParserRuleCall_0()); }
	ruleXorExpr
{ after(grammarAccess.getBitwiseOrExprAccess().getXorExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getGroup_1()); }
(rule__BitwiseOrExpr__Group_1__0)*
{ after(grammarAccess.getBitwiseOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group_1__0__Impl
	rule__BitwiseOrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getGroup_1_0()); }
(rule__BitwiseOrExpr__Group_1_0__0)
{ after(grammarAccess.getBitwiseOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getRightAssignment_1_1()); }
(rule__BitwiseOrExpr__RightAssignment_1_1)
{ after(grammarAccess.getBitwiseOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getGroup_1_0_0()); }
(rule__BitwiseOrExpr__Group_1_0_0__0)
{ after(grammarAccess.getBitwiseOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BitwiseOrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group_1_0_0__0__Impl
	rule__BitwiseOrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getBitwiseOrExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getBitwiseOrExprAccess().getBitwiseOrExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getVerticalLineKeyword_1_0_0_1()); }

	'|' 

{ after(grammarAccess.getBitwiseOrExprAccess().getVerticalLineKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__0__Impl
	rule__XorExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getBitwiseAndExprParserRuleCall_0()); }
	ruleBitwiseAndExpr
{ after(grammarAccess.getXorExprAccess().getBitwiseAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1()); }
(rule__XorExpr__Group_1__0)*
{ after(grammarAccess.getXorExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1__0__Impl
	rule__XorExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1_0()); }
(rule__XorExpr__Group_1_0__0)
{ after(grammarAccess.getXorExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightAssignment_1_1()); }
(rule__XorExpr__RightAssignment_1_1)
{ after(grammarAccess.getXorExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getGroup_1_0_0()); }
(rule__XorExpr__Group_1_0_0__0)
{ after(grammarAccess.getXorExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XorExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0_0__0__Impl
	rule__XorExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getXorExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXorExprAccess().getXorExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1_0_0_1()); }

	'^' 

{ after(grammarAccess.getXorExprAccess().getCircumflexAccentKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group__0__Impl
	rule__BitwiseAndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getEqualityExprParserRuleCall_0()); }
	ruleEqualityExpr
{ after(grammarAccess.getBitwiseAndExprAccess().getEqualityExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1()); }
(rule__BitwiseAndExpr__Group_1__0)*
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1__0__Impl
	rule__BitwiseAndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0()); }
(rule__BitwiseAndExpr__Group_1_0__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getRightAssignment_1_1()); }
(rule__BitwiseAndExpr__RightAssignment_1_1)
{ after(grammarAccess.getBitwiseAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0_0()); }
(rule__BitwiseAndExpr__Group_1_0_0__0)
{ after(grammarAccess.getBitwiseAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__BitwiseAndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0_0__0__Impl
	rule__BitwiseAndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getBitwiseAndExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getBitwiseAndExprAccess().getBitwiseAndExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getAmpersandKeyword_1_0_0_1()); }

	'&' 

{ after(grammarAccess.getBitwiseAndExprAccess().getAmpersandKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getCompareExprParserRuleCall_0()); }
	ruleCompareExpr
{ after(grammarAccess.getEqualityExprAccess().getCompareExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
(rule__EqualityExpr__Group_1__0)*
{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1_0()); }
(rule__EqualityExpr__Group_1_0__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_1()); }
(rule__EqualityExpr__RightAssignment_1_1)
{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1_0_0()); }
(rule__EqualityExpr__Group_1_0_0__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualityExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0_0__0__Impl
	rule__EqualityExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__EqualityExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getEqualityExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group__0__Impl
	rule__CompareExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getShiftExprParserRuleCall_0()); }
	ruleShiftExpr
{ after(grammarAccess.getCompareExprAccess().getShiftExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1()); }
(rule__CompareExpr__Group_1__0)*
{ after(grammarAccess.getCompareExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1__0__Impl
	rule__CompareExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1_0()); }
(rule__CompareExpr__Group_1_0__0)
{ after(grammarAccess.getCompareExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getRightAssignment_1_1()); }
(rule__CompareExpr__RightAssignment_1_1)
{ after(grammarAccess.getCompareExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getGroup_1_0_0()); }
(rule__CompareExpr__Group_1_0_0__0)
{ after(grammarAccess.getCompareExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0_0__0__Impl
	rule__CompareExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getCompareExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareExprAccess().getCompareExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__CompareExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getCompareExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group__0__Impl
	rule__ShiftExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getAdditiveExprParserRuleCall_0()); }
	ruleAdditiveExpr
{ after(grammarAccess.getShiftExprAccess().getAdditiveExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1()); }
(rule__ShiftExpr__Group_1__0)*
{ after(grammarAccess.getShiftExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1__0__Impl
	rule__ShiftExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1_0()); }
(rule__ShiftExpr__Group_1_0__0)
{ after(grammarAccess.getShiftExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getRightAssignment_1_1()); }
(rule__ShiftExpr__RightAssignment_1_1)
{ after(grammarAccess.getShiftExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getGroup_1_0_0()); }
(rule__ShiftExpr__Group_1_0_0__0)
{ after(grammarAccess.getShiftExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ShiftExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0_0__0__Impl
	rule__ShiftExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getShiftExprAccess().getShiftExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__ShiftExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getShiftExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__0__Impl
	rule__AdditiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
	ruleMultiplicativeExpr
{ after(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
(rule__AdditiveExpr__Group_1__0)*
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__0__Impl
	rule__AdditiveExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0()); }
(rule__AdditiveExpr__Group_1_0__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
(rule__AdditiveExpr__RightAssignment_1_1)
{ after(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
(rule__AdditiveExpr__Group_1_0_0__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditiveExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0_0__0__Impl
	rule__AdditiveExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditiveExprAccess().getAdditiveExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__AdditiveExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getAdditiveExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__0__Impl
	rule__MultiplicativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getTerminalExprParserRuleCall_0()); }
	ruleTerminalExpr
{ after(grammarAccess.getMultiplicativeExprAccess().getTerminalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
(rule__MultiplicativeExpr__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__0__Impl
	rule__MultiplicativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0()); }
(rule__MultiplicativeExpr__Group_1_0__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
(rule__MultiplicativeExpr__RightAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
(rule__MultiplicativeExpr__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplicativeExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0_0__0__Impl
	rule__MultiplicativeExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExprAccess().getMultiplicativeExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOperatorAssignment_1_0_0_1()); }
(rule__MultiplicativeExpr__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplicativeExprAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__0__Impl
	rule__TerminalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdExprAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIdExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIdKeyword_1_1()); }

	'id' 

{ after(grammarAccess.getTerminalExprAccess().getIdKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__0__Impl
	rule__TerminalExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getIntExprAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getIntExprAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueAssignment_2_1()); }
(rule__TerminalExpr__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExprAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__0__Impl
	rule__TerminalExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getDoubleExprAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getDoubleExprAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueAssignment_3_1()); }
(rule__TerminalExpr__ValueAssignment_3_1)
{ after(grammarAccess.getTerminalExprAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__0__Impl
	rule__TerminalExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getNodeNumExprAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getNodeNumExprAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getNKeyword_4_1()); }

	'#N' 

{ after(grammarAccess.getTerminalExprAccess().getNKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__0__Impl
	rule__TerminalExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getUnaryExprAction_5_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getUnaryExprAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__1__Impl
	rule__TerminalExpr__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperatorAssignment_5_1()); }
(rule__TerminalExpr__OperatorAssignment_5_1)
{ after(grammarAccess.getTerminalExprAccess().getOperatorAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperandAssignment_5_2()); }
(rule__TerminalExpr__OperandAssignment_5_2)
{ after(grammarAccess.getTerminalExprAccess().getOperandAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpr__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__0__Impl
	rule__TerminalExpr__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getBuiltInExprAction_6_0()); }
(

)
{ after(grammarAccess.getTerminalExprAccess().getBuiltInExprAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__1__Impl
	rule__TerminalExpr__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFunctionAssignment_6_1()); }
(rule__TerminalExpr__FunctionAssignment_6_1)
{ after(grammarAccess.getTerminalExprAccess().getFunctionAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__2__Impl
	rule__TerminalExpr__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_6_2()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__3__Impl
	rule__TerminalExpr__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFirstArgAssignment_6_3()); }
(rule__TerminalExpr__FirstArgAssignment_6_3)
{ after(grammarAccess.getTerminalExprAccess().getFirstArgAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__4__Impl
	rule__TerminalExpr__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getCommaKeyword_6_4()); }

	',' 

{ after(grammarAccess.getTerminalExprAccess().getCommaKeyword_6_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__5__Impl
	rule__TerminalExpr__Group_6__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecondArgAssignment_6_5()); }
(rule__TerminalExpr__SecondArgAssignment_6_5)
{ after(grammarAccess.getTerminalExprAccess().getSecondArgAssignment_6_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_6__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_6__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_6__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_6_6()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_6_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TerminalExpr__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__0__Impl
	rule__TerminalExpr__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_8_0()); }

	'(' 

{ after(grammarAccess.getTerminalExprAccess().getLeftParenthesisKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__1__Impl
	rule__TerminalExpr__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_8_1()); }
	ruleExpr
{ after(grammarAccess.getTerminalExprAccess().getExprParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpr__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpr__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_8_2()); }

	')' 

{ after(grammarAccess.getTerminalExprAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__0__Impl
	rule__CallExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_0()); }
(rule__CallExpr__Group_0__0)?
{ after(grammarAccess.getCallExprAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__1__Impl
	rule__CallExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNameAssignment_1()); }
(rule__CallExpr__NameAssignment_1)
{ after(grammarAccess.getCallExprAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__2__Impl
	rule__CallExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCallExprAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__3__Impl
	rule__CallExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_3()); }
(rule__CallExpr__Group_3__0)?
{ after(grammarAccess.getCallExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__4__Impl
	rule__CallExpr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCallExprAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_5()); }
(rule__CallExpr__Group_5__0)?
{ after(grammarAccess.getCallExprAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CallExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_0__0__Impl
	rule__CallExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNamespaceAssignment_0_0()); }
(rule__CallExpr__NamespaceAssignment_0_0)
{ after(grammarAccess.getCallExprAccess().getNamespaceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getColonColonKeyword_0_1()); }

	'::' 

{ after(grammarAccess.getCallExprAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_3__0__Impl
	rule__CallExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgsAssignment_3_0()); }
(rule__CallExpr__ArgsAssignment_3_0)
{ after(grammarAccess.getCallExprAccess().getArgsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getGroup_3_1()); }
(rule__CallExpr__Group_3_1__0)*
{ after(grammarAccess.getCallExprAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpr__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_3_1__0__Impl
	rule__CallExpr__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getCallExprAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgsAssignment_3_1_1()); }
(rule__CallExpr__ArgsAssignment_3_1_1)
{ after(grammarAccess.getCallExprAccess().getArgsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallExpr__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_5__0__Impl
	rule__CallExpr__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getCommercialAtKeyword_5_0()); }

	'@' 

{ after(grammarAccess.getCallExprAccess().getCommercialAtKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallExpr__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallExpr__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getAtAssignment_5_1()); }
(rule__CallExpr__AtAssignment_5_1)
{ after(grammarAccess.getCallExprAccess().getAtAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Double__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__0__Impl
	rule__Double__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__1__Impl
	rule__Double__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_2()); }
(	RULE_INT)?
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__ProgramElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgramElementsProgramElementParserRuleCall_1_0()); }
	ruleProgramElement{ after(grammarAccess.getProgramAccess().getProgramElementsProgramElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DmplSubclause__ProgramAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDmplSubclauseAccess().getProgramProgramParserRuleCall_1_0()); }
	ruleProgram{ after(grammarAccess.getDmplSubclauseAccess().getProgramProgramParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getConstantAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueNumberConstParserRuleCall_3_0()); }
	ruleNumberConst{ after(grammarAccess.getConstantAccess().getValueNumberConstParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getSignSignParserRuleCall_0_0()); }
	ruleSign{ after(grammarAccess.getIntConstAccess().getSignSignParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntConstAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getIntConstAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__SignAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getSignSignParserRuleCall_0_0()); }
	ruleSign{ after(grammarAccess.getDoubleConstAccess().getSignSignParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleConst__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleConstAccess().getValueDoubleParserRuleCall_1_0()); }
	ruleDouble{ after(grammarAccess.getDoubleConstAccess().getValueDoubleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NodeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeAccess().getNodeNodeNoAttrParserRuleCall_0()); }
	ruleNodeNoAttr{ after(grammarAccess.getNodeAccess().getNodeNodeNoAttrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getNodeNoAttrAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeNoAttr__BodyAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeNoAttrAccess().getBodyNodeBodyParserRuleCall_2_1_1_0()); }
	ruleNodeBody{ after(grammarAccess.getNodeNoAttrAccess().getBodyNodeBodyParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeBody__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeBodyAccess().getElementsNodeBodyElementParserRuleCall_1_0()); }
	ruleNodeBodyElement{ after(grammarAccess.getNodeBodyAccess().getElementsNodeBodyElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__OverrideAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getOverrideOverrideKeyword_0_0()); }
(
{ before(grammarAccess.getVarBlockAccess().getOverrideOverrideKeyword_0_0()); }

	'override' 

{ after(grammarAccess.getVarBlockAccess().getOverrideOverrideKeyword_0_0()); }
)

{ after(grammarAccess.getVarBlockAccess().getOverrideOverrideKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarBlock__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarBlockAccess().getVarNodeVarInitParserRuleCall_1_0()); }
	ruleNodeVarInit{ after(grammarAccess.getVarBlockAccess().getVarNodeVarInitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordBlock__RecordAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordBlockAccess().getRecordRecordParserRuleCall_0()); }
	ruleRecord{ after(grammarAccess.getRecordBlockAccess().getRecordRecordParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeVarInit__ScopeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeVarInitAccess().getScopeNodeVarScopeParserRuleCall_0_0()); }
	ruleNodeVarScope{ after(grammarAccess.getNodeVarInitAccess().getScopeNodeVarScopeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeVarInit__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeVarInitAccess().getVarVarInitParserRuleCall_1_0()); }
	ruleVarInit{ after(grammarAccess.getNodeVarInitAccess().getVarVarInitParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getRecordAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__VarsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getVarsNodeVarInitParserRuleCall_3_0_0()); }
	ruleNodeVarInit{ after(grammarAccess.getRecordAccess().getVarsNodeVarInitParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__EqualsBodyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getEqualsBodyFnBodyParserRuleCall_5_1_0()); }
	ruleFnBody{ after(grammarAccess.getRecordAccess().getEqualsBodyFnBodyParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Record__ComplementBodyAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordAccess().getComplementBodyFnBodyParserRuleCall_6_1_0()); }
	ruleFnBody{ after(grammarAccess.getRecordAccess().getComplementBodyFnBodyParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getVarInitAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__VarAsgnsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnsVarAsgnParserRuleCall_1_0()); }
	ruleVarAsgn{ after(grammarAccess.getVarInitAccess().getVarAsgnsVarAsgnParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarInit__VarAsgnsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarInitAccess().getVarAsgnsVarAsgnParserRuleCall_2_1_0()); }
	ruleVarAsgn{ after(grammarAccess.getVarInitAccess().getVarAsgnsVarAsgnParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__InputAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_0_0_0()); }
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_0_0_0()); }

	'input' 

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_0_0_0()); }
)

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_0_1_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_1_1_0_0_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__InputAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_1_1_1_0_0()); }
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_1_1_1_0_0()); }

	'input' 

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_1_1_1_0_0()); }
)

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_1_1_1_1_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getExprExprParserRuleCall_1_2_0()); }
	ruleExpr{ after(grammarAccess.getVarAsgnAccess().getExprExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_2_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_2_1_0_0_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__InputAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_2_1_1_0_0()); }
(
{ before(grammarAccess.getVarAsgnAccess().getInputInputKeyword_2_1_1_0_0()); }

	'input' 

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_2_1_1_0_0()); }
)

{ after(grammarAccess.getVarAsgnAccess().getInputInputKeyword_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__VarAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_2_1_1_1_0()); }
	ruleVar{ after(grammarAccess.getVarAsgnAccess().getVarVarParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarAsgn__FnBodyAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAsgnAccess().getFnBodyFnBodyParserRuleCall_2_2_0()); }
	ruleFnBody{ after(grammarAccess.getVarAsgnAccess().getFnBodyFnBodyParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getVarAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__DimensionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getDimensionsDimensionParserRuleCall_1_1_0()); }
	ruleDimension{ after(grammarAccess.getVarAccess().getDimensionsDimensionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__IndexAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getDimensionAccess().getIndexINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__IndexAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDimensionAccess().getIndexTIDENTIFIERTerminalRuleCall_2_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getDimensionAccess().getIndexTIDENTIFIERTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SignedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSignedSignedParserRuleCall_0_0()); }
	ruleSigned{ after(grammarAccess.getTypeAccess().getSignedSignedParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimpTypeSimpTypeParserRuleCall_1_0()); }
	ruleSimpType{ after(grammarAccess.getTypeAccess().getSimpTypeSimpTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__AttrListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getAttrListAttrListParserRuleCall_0_0()); }
	ruleAttrList{ after(grammarAccess.getProcedureAccess().getAttrListAttrListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__OverrideAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getOverrideOverrideKeyword_1_0()); }
(
{ before(grammarAccess.getProcedureAccess().getOverrideOverrideKeyword_1_0()); }

	'override' 

{ after(grammarAccess.getProcedureAccess().getOverrideOverrideKeyword_1_0()); }
)

{ after(grammarAccess.getProcedureAccess().getOverrideOverrideKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__PrototypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getPrototypeFnPrototypeParserRuleCall_2_0()); }
	ruleFnPrototype{ after(grammarAccess.getProcedureAccess().getPrototypeFnPrototypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__FnBodyAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getFnBodyFnBodyParserRuleCall_3_1_0()); }
	ruleFnBody{ after(grammarAccess.getProcedureAccess().getFnBodyFnBodyParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__VarInitsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getVarInitsVarInitParserRuleCall_2_0_0()); }
	ruleVarInit{ after(grammarAccess.getFnBodyAccess().getVarInitsVarInitParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnBody__StmtsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnBodyAccess().getStmtsStmtParserRuleCall_3_0()); }
	ruleStmt{ after(grammarAccess.getFnBodyAccess().getStmtsStmtParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAlternatives_0_1_0()); }
(rule__FnPrototype__ExternAlternatives_0_1_0)
{ after(grammarAccess.getFnPrototypeAccess().getExternAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAlternatives_0_2_0()); }
(rule__FnPrototype__PureAlternatives_0_2_0)
{ after(grammarAccess.getFnPrototypeAccess().getPureAlternatives_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__NameAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_0_4_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ExternAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getExternAlternatives_1_1_0()); }
(rule__FnPrototype__ExternAlternatives_1_1_0)
{ after(grammarAccess.getFnPrototypeAccess().getExternAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__PureAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getPureAlternatives_1_2_0()); }
(rule__FnPrototype__PureAlternatives_1_2_0)
{ after(grammarAccess.getFnPrototypeAccess().getPureAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__TypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getTypeTypeParserRuleCall_1_3_0()); }
	ruleType{ after(grammarAccess.getFnPrototypeAccess().getTypeTypeParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__NameAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_1_4_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getFnPrototypeAccess().getNameTIDENTIFIERTerminalRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ParamsAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_0_0()); }
	ruleParam{ after(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FnPrototype__ParamsAssignment_1_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_1_1_0()); }
	ruleParam{ after(grammarAccess.getFnPrototypeAccess().getParamsParamParserRuleCall_1_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__AttrsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrsAttrParserRuleCall_0_0()); }
	ruleAttr{ after(grammarAccess.getAttrListAccess().getAttrsAttrParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getAttrAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getParamsExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getAttrAccess().getParamsExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attr__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAccess().getParamsExprParserRuleCall_2_2_1_0()); }
	ruleExpr{ after(grammarAccess.getAttrAccess().getParamsExprParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getVarVarParserRuleCall_1_0()); }
	ruleVar{ after(grammarAccess.getParamAccess().getVarVarParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StmtsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtsStmtParserRuleCall_0_2_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getStmtsStmtParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ConditionAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_2_3_0()); }
	ruleExpr{ after(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StmtAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_2_5_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__InitsAssignment_3_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getInitsAssignmentStmtParserRuleCall_3_3_0_0()); }
	ruleAssignmentStmt{ after(grammarAccess.getStmtAccess().getInitsAssignmentStmtParserRuleCall_3_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__InitsAssignment_3_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getInitsAssignmentStmtParserRuleCall_3_3_1_1_0()); }
	ruleAssignmentStmt{ after(grammarAccess.getStmtAccess().getInitsAssignmentStmtParserRuleCall_3_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ConditionAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_3_5_0()); }
	ruleExpr{ after(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__UpdateAssignment_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getUpdateAssignmentStmtParserRuleCall_3_7_0()); }
	ruleAssignmentStmt{ after(grammarAccess.getStmtAccess().getUpdateAssignmentStmtParserRuleCall_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StmtAssignment_3_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_3_9_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_3_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__AttrListAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getAttrListAttrListParserRuleCall_4_1_0()); }
	ruleAttrList{ after(grammarAccess.getStmtAccess().getAttrListAttrListParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ConditionAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_4_4_0()); }
	ruleExpr{ after(grammarAccess.getStmtAccess().getConditionExprParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ThenAssignment_4_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getThenStmtParserRuleCall_4_6_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getThenStmtParserRuleCall_4_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ElseAssignment_4_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getElseStmtParserRuleCall_4_7_1_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getElseStmtParserRuleCall_4_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__NameAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNameSimpleStmtKeywordParserRuleCall_5_1_0()); }
	ruleSimpleStmtKeyword{ after(grammarAccess.getStmtAccess().getNameSimpleStmtKeywordParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ValueAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getValueExprParserRuleCall_6_2_0()); }
	ruleExpr{ after(grammarAccess.getStmtAccess().getValueExprParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__NameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNameForAllFunctionParserRuleCall_8_1_0()); }
	ruleForAllFunction{ after(grammarAccess.getStmtAccess().getNameForAllFunctionParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__NodeAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNodeTIDENTIFIERTerminalRuleCall_8_3_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getStmtAccess().getNodeTIDENTIFIERTerminalRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StmtAssignment_8_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_8_5_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_8_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Node1Assignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNode1TIDENTIFIERTerminalRuleCall_9_3_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getStmtAccess().getNode1TIDENTIFIERTerminalRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Node2Assignment_9_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getNode2TIDENTIFIERTerminalRuleCall_9_5_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getStmtAccess().getNode2TIDENTIFIERTerminalRuleCall_9_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__StmtAssignment_9_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_9_7_0()); }
	ruleStmt{ after(grammarAccess.getStmtAccess().getStmtStmtParserRuleCall_9_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStmt__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStmtAccess().getVariableLValParserRuleCall_0_0()); }
	ruleLVal{ after(grammarAccess.getAssignmentStmtAccess().getVariableLValParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStmt__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentStmtAccess().getValueExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAssignmentStmtAccess().getValueExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getLValAccess().getNameTIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getIndicesExprParserRuleCall_1_1_0()); }
	ruleExpr{ after(grammarAccess.getLValAccess().getIndicesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LVal__AtAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLValAccess().getAtExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getLValAccess().getAtExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ThenAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getThenExprParserRuleCall_1_1_0()); }
	ruleExpr{ after(grammarAccess.getExprAccess().getThenExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__ElseAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprAccess().getElseExprParserRuleCall_1_3_0()); }
	ruleExpr{ after(grammarAccess.getExprAccess().getElseExprParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightBitwiseOrExprParserRuleCall_1_1_0()); }
	ruleBitwiseOrExpr{ after(grammarAccess.getAndExprAccess().getRightBitwiseOrExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExprAccess().getRightXorExprParserRuleCall_1_1_0()); }
	ruleXorExpr{ after(grammarAccess.getBitwiseOrExprAccess().getRightXorExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorExprAccess().getRightBitwiseAndExprParserRuleCall_1_1_0()); }
	ruleBitwiseAndExpr{ after(grammarAccess.getXorExprAccess().getRightBitwiseAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExprAccess().getRightEqualityExprParserRuleCall_1_1_0()); }
	ruleEqualityExpr{ after(grammarAccess.getBitwiseAndExprAccess().getRightEqualityExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleEqualityOperator{ after(grammarAccess.getEqualityExprAccess().getOperatorEqualityOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightCompareExprParserRuleCall_1_1_0()); }
	ruleCompareExpr{ after(grammarAccess.getEqualityExprAccess().getRightCompareExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getOperatorCompareOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareExprAccess().getOperatorCompareOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExprAccess().getRightShiftExprParserRuleCall_1_1_0()); }
	ruleShiftExpr{ after(grammarAccess.getCompareExprAccess().getRightShiftExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleShiftOperator{ after(grammarAccess.getShiftExprAccess().getOperatorShiftOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
	ruleAdditiveExpr{ after(grammarAccess.getShiftExprAccess().getRightAdditiveExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleAdditiveOperator{ after(grammarAccess.getAdditiveExprAccess().getOperatorAdditiveOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpr{ after(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
	ruleMultiplicativeOperator{ after(grammarAccess.getMultiplicativeExprAccess().getOperatorMultiplicativeOperatorEnumRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightTerminalExprParserRuleCall_1_1_0()); }
	ruleTerminalExpr{ after(grammarAccess.getMultiplicativeExprAccess().getRightTerminalExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExprAccess().getValueINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getValueDoubleParserRuleCall_3_1_0()); }
	ruleDouble{ after(grammarAccess.getTerminalExprAccess().getValueDoubleParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__OperatorAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperatorUnaryOperatorEnumRuleCall_5_1_0()); }
	ruleUnaryOperator{ after(grammarAccess.getTerminalExprAccess().getOperatorUnaryOperatorEnumRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__OperandAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getOperandExprParserRuleCall_5_2_0()); }
	ruleExpr{ after(grammarAccess.getTerminalExprAccess().getOperandExprParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__FunctionAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFunctionBuiltInFunctionParserRuleCall_6_1_0()); }
	ruleBuiltInFunction{ after(grammarAccess.getTerminalExprAccess().getFunctionBuiltInFunctionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__FirstArgAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getFirstArgTIDENTIFIERTerminalRuleCall_6_3_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getTerminalExprAccess().getFirstArgTIDENTIFIERTerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpr__SecondArgAssignment_6_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExprAccess().getSecondArgExprParserRuleCall_6_5_0()); }
	ruleExpr{ after(grammarAccess.getTerminalExprAccess().getSecondArgExprParserRuleCall_6_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__NamespaceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNamespaceTIDENTIFIERTerminalRuleCall_0_0_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getCallExprAccess().getNamespaceTIDENTIFIERTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
	RULE_TIDENTIFIER{ after(grammarAccess.getCallExprAccess().getNameTIDENTIFIERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__ArgsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgsExprParserRuleCall_3_0_0()); }
	ruleExpr{ after(grammarAccess.getCallExprAccess().getArgsExprParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__ArgsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getArgsExprParserRuleCall_3_1_1_0()); }
	ruleExpr{ after(grammarAccess.getCallExprAccess().getArgsExprParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallExpr__AtAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallExprAccess().getAtExprParserRuleCall_5_1_0()); }
	ruleExpr{ after(grammarAccess.getCallExprAccess().getAtExprParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TIDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


