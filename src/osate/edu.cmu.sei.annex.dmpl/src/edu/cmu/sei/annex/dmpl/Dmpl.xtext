grammar edu.cmu.sei.annex.dmpl.Dmpl with org.eclipse.xtext.common.Terminals

generate dmpl "http://www.cmu.edu/sei/annex/dmpl/Dmpl"

import "http://aadl.info/AADL/2.0" as aadl2
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program:
	{Program}
	programElements+=ProgramElement*
;

AnnexSubclause returns aadl2::AnnexSubclause:
	DmplSubclause
;

DmplSubclause: {DmplSubclause}
	program=Program
;

ProgramElement:
	//TODO: target, node
	Constant | Procedure
;

Constant:
	('const' | 'CONST') name=TIDENTIFIER '=' value=NumberConst ';'
;

NumberConst:
	IntConst | DoubleConst
;

IntConst:
	sign=Sign? value=INT
;

DoubleConst:
	sign=Sign? value=Double
;

Type:
	signed=Signed? simpType=SimpType
;

FnType:
	type=Type
;

Procedure:
	//TODO: OVERRIDE and attr_list
	procedure=ProcNoAttr
;

ProcNoAttr:
	//TODO: fn_body
	prototype=FnPrototype ';'
;

FnPrototype:
	extern?=('extern' | 'EXTERN')? pure?=('pure' | 'PURE')? prototype=FnPrototypeNoDecors
;

FnPrototypeNoDecors:
	{ThreadDeclaration} 'thread' name=TIDENTIFIER |
	//TODO: param_list
	{FnPrototypeDeclaration} type=FnType name=TIDENTIFIER '(' ')'
;

enum SignEnum:
	unset |
	PLUS='+' |
	MINUS='-'
;

Sign returns SignEnum:
	'+' | '-'
;

enum SimpTypeEnum:
	bool | int | double | void | char
;

SimpType returns SimpTypeEnum:
	'bool' | '_Bool' | 'int' | 'double' | 'void' | 'char'
;

enum SignedEnum:
	unset | signed | unsigned
;

Signed returns SignedEnum:
	'signed' | 'unsigned'
;

Double returns ecore::EDouble:
	'NAN' | INT '.' INT?
;

terminal TIDENTIFIER:
	('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;